// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file elys/masterchef/external_incentive.proto (package elys.masterchef, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";

/**
 * ExternalIncentive defines the external incentives.
 *
 * @generated from message elys.masterchef.ExternalIncentive
 */
export class ExternalIncentive extends Message<ExternalIncentive> {
  /**
   * @generated from field: uint64 id = 1;
   */
  id = protoInt64.zero;

  /**
   * @generated from field: string reward_denom = 2;
   */
  rewardDenom = "";

  /**
   * @generated from field: uint64 pool_id = 3;
   */
  poolId = protoInt64.zero;

  /**
   * @generated from field: uint64 from_block = 4;
   */
  fromBlock = protoInt64.zero;

  /**
   * @generated from field: uint64 to_block = 5;
   */
  toBlock = protoInt64.zero;

  /**
   * @generated from field: string amount_per_block = 6;
   */
  amountPerBlock = "";

  /**
   * @generated from field: string apr = 7;
   */
  apr = "";

  constructor(data?: PartialMessage<ExternalIncentive>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.masterchef.ExternalIncentive";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "reward_denom", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "pool_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "from_block", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 5, name: "to_block", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 6, name: "amount_per_block", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "apr", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExternalIncentive {
    return new ExternalIncentive().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExternalIncentive {
    return new ExternalIncentive().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExternalIncentive {
    return new ExternalIncentive().fromJsonString(jsonString, options);
  }

  static equals(a: ExternalIncentive | PlainMessage<ExternalIncentive> | undefined, b: ExternalIncentive | PlainMessage<ExternalIncentive> | undefined): boolean {
    return proto3.util.equals(ExternalIncentive, a, b);
  }
}

