// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file elys/oracle/price.proto (package elys.oracle, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";

/**
 * @generated from message elys.oracle.Price
 */
export class Price extends Message<Price> {
  /**
   * @generated from field: string asset = 1;
   */
  asset = "";

  /**
   * @generated from field: string price = 2;
   */
  price = "";

  /**
   * @generated from field: string source = 3;
   */
  source = "";

  /**
   * @generated from field: string provider = 4;
   */
  provider = "";

  /**
   * @generated from field: uint64 timestamp = 5;
   */
  timestamp = protoInt64.zero;

  /**
   * @generated from field: uint64 block_height = 6;
   */
  blockHeight = protoInt64.zero;

  constructor(data?: PartialMessage<Price>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.oracle.Price";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "asset", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "price", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "source", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "provider", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "timestamp", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 6, name: "block_height", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Price {
    return new Price().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Price {
    return new Price().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Price {
    return new Price().fromJsonString(jsonString, options);
  }

  static equals(a: Price | PlainMessage<Price> | undefined, b: Price | PlainMessage<Price> | undefined): boolean {
    return proto3.util.equals(Price, a, b);
  }
}

/**
 * @generated from message elys.oracle.LegacyPrice
 */
export class LegacyPrice extends Message<LegacyPrice> {
  /**
   * @generated from field: string asset = 1;
   */
  asset = "";

  /**
   * @generated from field: string price = 2;
   */
  price = "";

  /**
   * @generated from field: string source = 3;
   */
  source = "";

  /**
   * @generated from field: string provider = 4;
   */
  provider = "";

  /**
   * @generated from field: uint64 timestamp = 5;
   */
  timestamp = protoInt64.zero;

  constructor(data?: PartialMessage<LegacyPrice>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.oracle.LegacyPrice";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "asset", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "price", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "source", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "provider", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "timestamp", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LegacyPrice {
    return new LegacyPrice().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LegacyPrice {
    return new LegacyPrice().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LegacyPrice {
    return new LegacyPrice().fromJsonString(jsonString, options);
  }

  static equals(a: LegacyPrice | PlainMessage<LegacyPrice> | undefined, b: LegacyPrice | PlainMessage<LegacyPrice> | undefined): boolean {
    return proto3.util.equals(LegacyPrice, a, b);
  }
}

