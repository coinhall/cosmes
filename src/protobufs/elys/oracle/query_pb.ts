// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file elys/oracle/query.proto (package elys.oracle, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";
import { Params } from "./params_pb.js";
import { BandPriceResult } from "./band_price_pb.js";
import { AssetInfo } from "./asset_info_pb.js";
import { PageRequest, PageResponse } from "../../cosmos/base/query/v1beta1/pagination_pb.js";
import { Price } from "./price_pb.js";
import { PriceFeeder } from "./price_feeder_pb.js";

/**
 * QueryParamsRequest is request type for the Query/Params RPC method.
 *
 * @generated from message elys.oracle.QueryParamsRequest
 */
export class QueryParamsRequest extends Message<QueryParamsRequest> {
  constructor(data?: PartialMessage<QueryParamsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.oracle.QueryParamsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryParamsRequest {
    return new QueryParamsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryParamsRequest {
    return new QueryParamsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryParamsRequest {
    return new QueryParamsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryParamsRequest | PlainMessage<QueryParamsRequest> | undefined, b: QueryParamsRequest | PlainMessage<QueryParamsRequest> | undefined): boolean {
    return proto3.util.equals(QueryParamsRequest, a, b);
  }
}

/**
 * QueryParamsResponse is response type for the Query/Params RPC method.
 *
 * @generated from message elys.oracle.QueryParamsResponse
 */
export class QueryParamsResponse extends Message<QueryParamsResponse> {
  /**
   * params holds all the parameters of this module.
   *
   * @generated from field: elys.oracle.Params params = 1;
   */
  params?: Params;

  constructor(data?: PartialMessage<QueryParamsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.oracle.QueryParamsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "params", kind: "message", T: Params },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryParamsResponse {
    return new QueryParamsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryParamsResponse {
    return new QueryParamsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryParamsResponse {
    return new QueryParamsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryParamsResponse | PlainMessage<QueryParamsResponse> | undefined, b: QueryParamsResponse | PlainMessage<QueryParamsResponse> | undefined): boolean {
    return proto3.util.equals(QueryParamsResponse, a, b);
  }
}

/**
 * @generated from message elys.oracle.QueryBandPriceRequest
 */
export class QueryBandPriceRequest extends Message<QueryBandPriceRequest> {
  /**
   * @generated from field: int64 request_id = 1;
   */
  requestId = protoInt64.zero;

  constructor(data?: PartialMessage<QueryBandPriceRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.oracle.QueryBandPriceRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "request_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryBandPriceRequest {
    return new QueryBandPriceRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryBandPriceRequest {
    return new QueryBandPriceRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryBandPriceRequest {
    return new QueryBandPriceRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryBandPriceRequest | PlainMessage<QueryBandPriceRequest> | undefined, b: QueryBandPriceRequest | PlainMessage<QueryBandPriceRequest> | undefined): boolean {
    return proto3.util.equals(QueryBandPriceRequest, a, b);
  }
}

/**
 * @generated from message elys.oracle.QueryBandPriceResponse
 */
export class QueryBandPriceResponse extends Message<QueryBandPriceResponse> {
  /**
   * @generated from field: elys.oracle.BandPriceResult result = 1;
   */
  result?: BandPriceResult;

  constructor(data?: PartialMessage<QueryBandPriceResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.oracle.QueryBandPriceResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "result", kind: "message", T: BandPriceResult },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryBandPriceResponse {
    return new QueryBandPriceResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryBandPriceResponse {
    return new QueryBandPriceResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryBandPriceResponse {
    return new QueryBandPriceResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryBandPriceResponse | PlainMessage<QueryBandPriceResponse> | undefined, b: QueryBandPriceResponse | PlainMessage<QueryBandPriceResponse> | undefined): boolean {
    return proto3.util.equals(QueryBandPriceResponse, a, b);
  }
}

/**
 * @generated from message elys.oracle.QueryLastBandRequestIdRequest
 */
export class QueryLastBandRequestIdRequest extends Message<QueryLastBandRequestIdRequest> {
  constructor(data?: PartialMessage<QueryLastBandRequestIdRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.oracle.QueryLastBandRequestIdRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryLastBandRequestIdRequest {
    return new QueryLastBandRequestIdRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryLastBandRequestIdRequest {
    return new QueryLastBandRequestIdRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryLastBandRequestIdRequest {
    return new QueryLastBandRequestIdRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryLastBandRequestIdRequest | PlainMessage<QueryLastBandRequestIdRequest> | undefined, b: QueryLastBandRequestIdRequest | PlainMessage<QueryLastBandRequestIdRequest> | undefined): boolean {
    return proto3.util.equals(QueryLastBandRequestIdRequest, a, b);
  }
}

/**
 * @generated from message elys.oracle.QueryLastBandRequestIdResponse
 */
export class QueryLastBandRequestIdResponse extends Message<QueryLastBandRequestIdResponse> {
  /**
   * @generated from field: int64 request_id = 1;
   */
  requestId = protoInt64.zero;

  constructor(data?: PartialMessage<QueryLastBandRequestIdResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.oracle.QueryLastBandRequestIdResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "request_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryLastBandRequestIdResponse {
    return new QueryLastBandRequestIdResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryLastBandRequestIdResponse {
    return new QueryLastBandRequestIdResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryLastBandRequestIdResponse {
    return new QueryLastBandRequestIdResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryLastBandRequestIdResponse | PlainMessage<QueryLastBandRequestIdResponse> | undefined, b: QueryLastBandRequestIdResponse | PlainMessage<QueryLastBandRequestIdResponse> | undefined): boolean {
    return proto3.util.equals(QueryLastBandRequestIdResponse, a, b);
  }
}

/**
 * @generated from message elys.oracle.QueryGetAssetInfoRequest
 */
export class QueryGetAssetInfoRequest extends Message<QueryGetAssetInfoRequest> {
  /**
   * @generated from field: string denom = 1;
   */
  denom = "";

  constructor(data?: PartialMessage<QueryGetAssetInfoRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.oracle.QueryGetAssetInfoRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "denom", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryGetAssetInfoRequest {
    return new QueryGetAssetInfoRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryGetAssetInfoRequest {
    return new QueryGetAssetInfoRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryGetAssetInfoRequest {
    return new QueryGetAssetInfoRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryGetAssetInfoRequest | PlainMessage<QueryGetAssetInfoRequest> | undefined, b: QueryGetAssetInfoRequest | PlainMessage<QueryGetAssetInfoRequest> | undefined): boolean {
    return proto3.util.equals(QueryGetAssetInfoRequest, a, b);
  }
}

/**
 * @generated from message elys.oracle.QueryGetAssetInfoResponse
 */
export class QueryGetAssetInfoResponse extends Message<QueryGetAssetInfoResponse> {
  /**
   * @generated from field: elys.oracle.AssetInfo asset_info = 1;
   */
  assetInfo?: AssetInfo;

  constructor(data?: PartialMessage<QueryGetAssetInfoResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.oracle.QueryGetAssetInfoResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "asset_info", kind: "message", T: AssetInfo },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryGetAssetInfoResponse {
    return new QueryGetAssetInfoResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryGetAssetInfoResponse {
    return new QueryGetAssetInfoResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryGetAssetInfoResponse {
    return new QueryGetAssetInfoResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryGetAssetInfoResponse | PlainMessage<QueryGetAssetInfoResponse> | undefined, b: QueryGetAssetInfoResponse | PlainMessage<QueryGetAssetInfoResponse> | undefined): boolean {
    return proto3.util.equals(QueryGetAssetInfoResponse, a, b);
  }
}

/**
 * @generated from message elys.oracle.QueryAllAssetInfoRequest
 */
export class QueryAllAssetInfoRequest extends Message<QueryAllAssetInfoRequest> {
  /**
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 1;
   */
  pagination?: PageRequest;

  constructor(data?: PartialMessage<QueryAllAssetInfoRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.oracle.QueryAllAssetInfoRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "pagination", kind: "message", T: PageRequest },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllAssetInfoRequest {
    return new QueryAllAssetInfoRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllAssetInfoRequest {
    return new QueryAllAssetInfoRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllAssetInfoRequest {
    return new QueryAllAssetInfoRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllAssetInfoRequest | PlainMessage<QueryAllAssetInfoRequest> | undefined, b: QueryAllAssetInfoRequest | PlainMessage<QueryAllAssetInfoRequest> | undefined): boolean {
    return proto3.util.equals(QueryAllAssetInfoRequest, a, b);
  }
}

/**
 * @generated from message elys.oracle.QueryAllAssetInfoResponse
 */
export class QueryAllAssetInfoResponse extends Message<QueryAllAssetInfoResponse> {
  /**
   * @generated from field: repeated elys.oracle.AssetInfo asset_info = 1;
   */
  assetInfo: AssetInfo[] = [];

  /**
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;

  constructor(data?: PartialMessage<QueryAllAssetInfoResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.oracle.QueryAllAssetInfoResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "asset_info", kind: "message", T: AssetInfo, repeated: true },
    { no: 2, name: "pagination", kind: "message", T: PageResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllAssetInfoResponse {
    return new QueryAllAssetInfoResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllAssetInfoResponse {
    return new QueryAllAssetInfoResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllAssetInfoResponse {
    return new QueryAllAssetInfoResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllAssetInfoResponse | PlainMessage<QueryAllAssetInfoResponse> | undefined, b: QueryAllAssetInfoResponse | PlainMessage<QueryAllAssetInfoResponse> | undefined): boolean {
    return proto3.util.equals(QueryAllAssetInfoResponse, a, b);
  }
}

/**
 * @generated from message elys.oracle.QueryGetPriceRequest
 */
export class QueryGetPriceRequest extends Message<QueryGetPriceRequest> {
  /**
   * @generated from field: string asset = 1;
   */
  asset = "";

  /**
   * @generated from field: string source = 2;
   */
  source = "";

  /**
   * @generated from field: uint64 timestamp = 3;
   */
  timestamp = protoInt64.zero;

  constructor(data?: PartialMessage<QueryGetPriceRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.oracle.QueryGetPriceRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "asset", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "source", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "timestamp", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryGetPriceRequest {
    return new QueryGetPriceRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryGetPriceRequest {
    return new QueryGetPriceRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryGetPriceRequest {
    return new QueryGetPriceRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryGetPriceRequest | PlainMessage<QueryGetPriceRequest> | undefined, b: QueryGetPriceRequest | PlainMessage<QueryGetPriceRequest> | undefined): boolean {
    return proto3.util.equals(QueryGetPriceRequest, a, b);
  }
}

/**
 * @generated from message elys.oracle.QueryGetPriceResponse
 */
export class QueryGetPriceResponse extends Message<QueryGetPriceResponse> {
  /**
   * @generated from field: elys.oracle.Price price = 1;
   */
  price?: Price;

  constructor(data?: PartialMessage<QueryGetPriceResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.oracle.QueryGetPriceResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "price", kind: "message", T: Price },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryGetPriceResponse {
    return new QueryGetPriceResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryGetPriceResponse {
    return new QueryGetPriceResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryGetPriceResponse {
    return new QueryGetPriceResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryGetPriceResponse | PlainMessage<QueryGetPriceResponse> | undefined, b: QueryGetPriceResponse | PlainMessage<QueryGetPriceResponse> | undefined): boolean {
    return proto3.util.equals(QueryGetPriceResponse, a, b);
  }
}

/**
 * @generated from message elys.oracle.QueryAllPriceRequest
 */
export class QueryAllPriceRequest extends Message<QueryAllPriceRequest> {
  /**
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 1;
   */
  pagination?: PageRequest;

  constructor(data?: PartialMessage<QueryAllPriceRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.oracle.QueryAllPriceRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "pagination", kind: "message", T: PageRequest },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllPriceRequest {
    return new QueryAllPriceRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllPriceRequest {
    return new QueryAllPriceRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllPriceRequest {
    return new QueryAllPriceRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllPriceRequest | PlainMessage<QueryAllPriceRequest> | undefined, b: QueryAllPriceRequest | PlainMessage<QueryAllPriceRequest> | undefined): boolean {
    return proto3.util.equals(QueryAllPriceRequest, a, b);
  }
}

/**
 * @generated from message elys.oracle.QueryAllPriceResponse
 */
export class QueryAllPriceResponse extends Message<QueryAllPriceResponse> {
  /**
   * @generated from field: repeated elys.oracle.Price price = 1;
   */
  price: Price[] = [];

  /**
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;

  constructor(data?: PartialMessage<QueryAllPriceResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.oracle.QueryAllPriceResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "price", kind: "message", T: Price, repeated: true },
    { no: 2, name: "pagination", kind: "message", T: PageResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllPriceResponse {
    return new QueryAllPriceResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllPriceResponse {
    return new QueryAllPriceResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllPriceResponse {
    return new QueryAllPriceResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllPriceResponse | PlainMessage<QueryAllPriceResponse> | undefined, b: QueryAllPriceResponse | PlainMessage<QueryAllPriceResponse> | undefined): boolean {
    return proto3.util.equals(QueryAllPriceResponse, a, b);
  }
}

/**
 * @generated from message elys.oracle.QueryGetPriceFeederRequest
 */
export class QueryGetPriceFeederRequest extends Message<QueryGetPriceFeederRequest> {
  /**
   * @generated from field: string feeder = 1;
   */
  feeder = "";

  constructor(data?: PartialMessage<QueryGetPriceFeederRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.oracle.QueryGetPriceFeederRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "feeder", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryGetPriceFeederRequest {
    return new QueryGetPriceFeederRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryGetPriceFeederRequest {
    return new QueryGetPriceFeederRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryGetPriceFeederRequest {
    return new QueryGetPriceFeederRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryGetPriceFeederRequest | PlainMessage<QueryGetPriceFeederRequest> | undefined, b: QueryGetPriceFeederRequest | PlainMessage<QueryGetPriceFeederRequest> | undefined): boolean {
    return proto3.util.equals(QueryGetPriceFeederRequest, a, b);
  }
}

/**
 * @generated from message elys.oracle.QueryGetPriceFeederResponse
 */
export class QueryGetPriceFeederResponse extends Message<QueryGetPriceFeederResponse> {
  /**
   * @generated from field: elys.oracle.PriceFeeder price_feeder = 1;
   */
  priceFeeder?: PriceFeeder;

  constructor(data?: PartialMessage<QueryGetPriceFeederResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.oracle.QueryGetPriceFeederResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "price_feeder", kind: "message", T: PriceFeeder },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryGetPriceFeederResponse {
    return new QueryGetPriceFeederResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryGetPriceFeederResponse {
    return new QueryGetPriceFeederResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryGetPriceFeederResponse {
    return new QueryGetPriceFeederResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryGetPriceFeederResponse | PlainMessage<QueryGetPriceFeederResponse> | undefined, b: QueryGetPriceFeederResponse | PlainMessage<QueryGetPriceFeederResponse> | undefined): boolean {
    return proto3.util.equals(QueryGetPriceFeederResponse, a, b);
  }
}

/**
 * @generated from message elys.oracle.QueryAllPriceFeederRequest
 */
export class QueryAllPriceFeederRequest extends Message<QueryAllPriceFeederRequest> {
  /**
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 1;
   */
  pagination?: PageRequest;

  constructor(data?: PartialMessage<QueryAllPriceFeederRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.oracle.QueryAllPriceFeederRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "pagination", kind: "message", T: PageRequest },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllPriceFeederRequest {
    return new QueryAllPriceFeederRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllPriceFeederRequest {
    return new QueryAllPriceFeederRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllPriceFeederRequest {
    return new QueryAllPriceFeederRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllPriceFeederRequest | PlainMessage<QueryAllPriceFeederRequest> | undefined, b: QueryAllPriceFeederRequest | PlainMessage<QueryAllPriceFeederRequest> | undefined): boolean {
    return proto3.util.equals(QueryAllPriceFeederRequest, a, b);
  }
}

/**
 * @generated from message elys.oracle.QueryAllPriceFeederResponse
 */
export class QueryAllPriceFeederResponse extends Message<QueryAllPriceFeederResponse> {
  /**
   * @generated from field: repeated elys.oracle.PriceFeeder price_feeder = 1;
   */
  priceFeeder: PriceFeeder[] = [];

  /**
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;

  constructor(data?: PartialMessage<QueryAllPriceFeederResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.oracle.QueryAllPriceFeederResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "price_feeder", kind: "message", T: PriceFeeder, repeated: true },
    { no: 2, name: "pagination", kind: "message", T: PageResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllPriceFeederResponse {
    return new QueryAllPriceFeederResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllPriceFeederResponse {
    return new QueryAllPriceFeederResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllPriceFeederResponse {
    return new QueryAllPriceFeederResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllPriceFeederResponse | PlainMessage<QueryAllPriceFeederResponse> | undefined, b: QueryAllPriceFeederResponse | PlainMessage<QueryAllPriceFeederResponse> | undefined): boolean {
    return proto3.util.equals(QueryAllPriceFeederResponse, a, b);
  }
}

