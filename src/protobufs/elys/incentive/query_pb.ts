// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file elys/incentive/query.proto (package elys.incentive, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";
import { EarnType } from "../commitment/params_pb.js";
import { PageRequest } from "../../cosmos/base/query/v1beta1/pagination_pb.js";
import { Coin } from "../../cosmos/base/v1beta1/coin_pb.js";

/**
 * @generated from message elys.incentive.QueryAprRequest
 */
export class QueryAprRequest extends Message<QueryAprRequest> {
  /**
   * @generated from field: elys.commitment.EarnType withdraw_type = 1;
   */
  withdrawType = EarnType.ALL_PROGRAM;

  /**
   * @generated from field: string denom = 2;
   */
  denom = "";

  constructor(data?: PartialMessage<QueryAprRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.incentive.QueryAprRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "withdraw_type", kind: "enum", T: proto3.getEnumType(EarnType) },
    { no: 2, name: "denom", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAprRequest {
    return new QueryAprRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAprRequest {
    return new QueryAprRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAprRequest {
    return new QueryAprRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAprRequest | PlainMessage<QueryAprRequest> | undefined, b: QueryAprRequest | PlainMessage<QueryAprRequest> | undefined): boolean {
    return proto3.util.equals(QueryAprRequest, a, b);
  }
}

/**
 * @generated from message elys.incentive.QueryAprResponse
 */
export class QueryAprResponse extends Message<QueryAprResponse> {
  /**
   * @generated from field: string apr = 1;
   */
  apr = "";

  constructor(data?: PartialMessage<QueryAprResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.incentive.QueryAprResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "apr", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAprResponse {
    return new QueryAprResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAprResponse {
    return new QueryAprResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAprResponse {
    return new QueryAprResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAprResponse | PlainMessage<QueryAprResponse> | undefined, b: QueryAprResponse | PlainMessage<QueryAprResponse> | undefined): boolean {
    return proto3.util.equals(QueryAprResponse, a, b);
  }
}

/**
 * @generated from message elys.incentive.QueryAprsRequest
 */
export class QueryAprsRequest extends Message<QueryAprsRequest> {
  constructor(data?: PartialMessage<QueryAprsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.incentive.QueryAprsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAprsRequest {
    return new QueryAprsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAprsRequest {
    return new QueryAprsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAprsRequest {
    return new QueryAprsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAprsRequest | PlainMessage<QueryAprsRequest> | undefined, b: QueryAprsRequest | PlainMessage<QueryAprsRequest> | undefined): boolean {
    return proto3.util.equals(QueryAprsRequest, a, b);
  }
}

/**
 * @generated from message elys.incentive.QueryAprsResponse
 */
export class QueryAprsResponse extends Message<QueryAprsResponse> {
  /**
   * @generated from field: string usdc_apr_usdc = 1;
   */
  usdcAprUsdc = "";

  /**
   * @generated from field: string eden_apr_usdc = 2;
   */
  edenAprUsdc = "";

  /**
   * @generated from field: string usdc_apr_edenb = 3;
   */
  usdcAprEdenb = "";

  /**
   * @generated from field: string eden_apr_edenb = 4;
   */
  edenAprEdenb = "";

  /**
   * @generated from field: string usdc_apr_eden = 5;
   */
  usdcAprEden = "";

  /**
   * @generated from field: string eden_apr_eden = 6;
   */
  edenAprEden = "";

  /**
   * @generated from field: string edenb_apr_eden = 7;
   */
  edenbAprEden = "";

  /**
   * @generated from field: string usdc_apr_elys = 8;
   */
  usdcAprElys = "";

  /**
   * @generated from field: string eden_apr_elys = 9;
   */
  edenAprElys = "";

  /**
   * @generated from field: string edenb_apr_elys = 10;
   */
  edenbAprElys = "";

  constructor(data?: PartialMessage<QueryAprsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.incentive.QueryAprsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "usdc_apr_usdc", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "eden_apr_usdc", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "usdc_apr_edenb", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "eden_apr_edenb", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "usdc_apr_eden", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "eden_apr_eden", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "edenb_apr_eden", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "usdc_apr_elys", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "eden_apr_elys", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "edenb_apr_elys", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAprsResponse {
    return new QueryAprsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAprsResponse {
    return new QueryAprsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAprsResponse {
    return new QueryAprsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAprsResponse | PlainMessage<QueryAprsResponse> | undefined, b: QueryAprsResponse | PlainMessage<QueryAprsResponse> | undefined): boolean {
    return proto3.util.equals(QueryAprsResponse, a, b);
  }
}

/**
 * @generated from message elys.incentive.QueryPoolRewardsRequest
 */
export class QueryPoolRewardsRequest extends Message<QueryPoolRewardsRequest> {
  /**
   * @generated from field: repeated uint64 pool_ids = 1;
   */
  poolIds: bigint[] = [];

  /**
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 2;
   */
  pagination?: PageRequest;

  constructor(data?: PartialMessage<QueryPoolRewardsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.incentive.QueryPoolRewardsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "pool_ids", kind: "scalar", T: 4 /* ScalarType.UINT64 */, repeated: true },
    { no: 2, name: "pagination", kind: "message", T: PageRequest },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryPoolRewardsRequest {
    return new QueryPoolRewardsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryPoolRewardsRequest {
    return new QueryPoolRewardsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryPoolRewardsRequest {
    return new QueryPoolRewardsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryPoolRewardsRequest | PlainMessage<QueryPoolRewardsRequest> | undefined, b: QueryPoolRewardsRequest | PlainMessage<QueryPoolRewardsRequest> | undefined): boolean {
    return proto3.util.equals(QueryPoolRewardsRequest, a, b);
  }
}

/**
 * @generated from message elys.incentive.PoolRewards
 */
export class PoolRewards extends Message<PoolRewards> {
  /**
   * @generated from field: uint64 pool_id = 1;
   */
  poolId = protoInt64.zero;

  /**
   * @generated from field: string rewards_usd = 2;
   */
  rewardsUsd = "";

  /**
   * @generated from field: repeated cosmos.base.v1beta1.Coin reward_coins = 3;
   */
  rewardCoins: Coin[] = [];

  constructor(data?: PartialMessage<PoolRewards>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.incentive.PoolRewards";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "pool_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "rewards_usd", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "reward_coins", kind: "message", T: Coin, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PoolRewards {
    return new PoolRewards().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PoolRewards {
    return new PoolRewards().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PoolRewards {
    return new PoolRewards().fromJsonString(jsonString, options);
  }

  static equals(a: PoolRewards | PlainMessage<PoolRewards> | undefined, b: PoolRewards | PlainMessage<PoolRewards> | undefined): boolean {
    return proto3.util.equals(PoolRewards, a, b);
  }
}

/**
 * @generated from message elys.incentive.QueryPoolRewardsResponse
 */
export class QueryPoolRewardsResponse extends Message<QueryPoolRewardsResponse> {
  /**
   * @generated from field: repeated elys.incentive.PoolRewards pools = 1;
   */
  pools: PoolRewards[] = [];

  constructor(data?: PartialMessage<QueryPoolRewardsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.incentive.QueryPoolRewardsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "pools", kind: "message", T: PoolRewards, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryPoolRewardsResponse {
    return new QueryPoolRewardsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryPoolRewardsResponse {
    return new QueryPoolRewardsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryPoolRewardsResponse {
    return new QueryPoolRewardsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryPoolRewardsResponse | PlainMessage<QueryPoolRewardsResponse> | undefined, b: QueryPoolRewardsResponse | PlainMessage<QueryPoolRewardsResponse> | undefined): boolean {
    return proto3.util.equals(QueryPoolRewardsResponse, a, b);
  }
}

