// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file elys/incentive/pool.proto (package elys.incentive, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";

/**
 * Pool Info
 *
 * @generated from message elys.incentive.PoolInfo
 */
export class PoolInfo extends Message<PoolInfo> {
  /**
   * reward amount
   *
   * @generated from field: uint64 pool_id = 1;
   */
  poolId = protoInt64.zero;

  /**
   * reward wallet address
   *
   * @generated from field: string reward_wallet = 2;
   */
  rewardWallet = "";

  /**
   * multiplier for lp rewards
   *
   * @generated from field: string multiplier = 3;
   */
  multiplier = "";

  /**
   * Block number since the creation of PoolInfo
   *
   * @generated from field: string num_blocks = 4;
   */
  numBlocks = "";

  /**
   * Total dex rewards given
   *
   * @generated from field: string dex_reward_amount_given = 5;
   */
  dexRewardAmountGiven = "";

  /**
   * Total eden rewards given
   *
   * @generated from field: string eden_reward_amount_given = 6;
   */
  edenRewardAmountGiven = "";

  /**
   * Eden APR, updated at every distribution
   *
   * @generated from field: string eden_apr = 7;
   */
  edenApr = "";

  /**
   * Dex APR, updated at every distribution
   *
   * @generated from field: string dex_apr = 8;
   */
  dexApr = "";

  constructor(data?: PartialMessage<PoolInfo>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.incentive.PoolInfo";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "pool_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "reward_wallet", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "multiplier", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "num_blocks", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "dex_reward_amount_given", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "eden_reward_amount_given", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "eden_apr", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "dex_apr", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PoolInfo {
    return new PoolInfo().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PoolInfo {
    return new PoolInfo().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PoolInfo {
    return new PoolInfo().fromJsonString(jsonString, options);
  }

  static equals(a: PoolInfo | PlainMessage<PoolInfo> | undefined, b: PoolInfo | PlainMessage<PoolInfo> | undefined): boolean {
    return proto3.util.equals(PoolInfo, a, b);
  }
}

