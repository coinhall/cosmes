// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file elys/amm/pool_params.proto (package elys.amm, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message elys.amm.PoolParams
 */
export class PoolParams extends Message<PoolParams> {
  /**
   * @generated from field: string swap_fee = 1;
   */
  swapFee = "";

  /**
   * @generated from field: string exit_fee = 2;
   */
  exitFee = "";

  /**
   * @generated from field: bool use_oracle = 3;
   */
  useOracle = false;

  /**
   * @generated from field: string weight_breaking_fee_multiplier = 4;
   */
  weightBreakingFeeMultiplier = "";

  /**
   * @generated from field: string weight_breaking_fee_exponent = 11;
   */
  weightBreakingFeeExponent = "";

  /**
   * @generated from field: string external_liquidity_ratio = 5;
   */
  externalLiquidityRatio = "";

  /**
   * @generated from field: string weight_recovery_fee_portion = 6;
   */
  weightRecoveryFeePortion = "";

  /**
   * @generated from field: string threshold_weight_difference = 7;
   */
  thresholdWeightDifference = "";

  /**
   * denom for fee collection
   *
   * @generated from field: string fee_denom = 8;
   */
  feeDenom = "";

  constructor(data?: PartialMessage<PoolParams>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.amm.PoolParams";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "swap_fee", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "exit_fee", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "use_oracle", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "weight_breaking_fee_multiplier", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "weight_breaking_fee_exponent", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "external_liquidity_ratio", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "weight_recovery_fee_portion", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "threshold_weight_difference", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "fee_denom", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PoolParams {
    return new PoolParams().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PoolParams {
    return new PoolParams().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PoolParams {
    return new PoolParams().fromJsonString(jsonString, options);
  }

  static equals(a: PoolParams | PlainMessage<PoolParams> | undefined, b: PoolParams | PlainMessage<PoolParams> | undefined): boolean {
    return proto3.util.equals(PoolParams, a, b);
  }
}

