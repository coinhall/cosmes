// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file elys/amm/proposal.proto (package elys.amm, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";
import { PoolParams } from "./pool_params_pb.js";
import { PoolAsset } from "./pool_asset_pb.js";

/**
 * @generated from message elys.amm.ProposalCreateBalancerPool
 */
export class ProposalCreateBalancerPool extends Message<ProposalCreateBalancerPool> {
  /**
   * @generated from field: string title = 1;
   */
  title = "";

  /**
   * @generated from field: string description = 2;
   */
  description = "";

  /**
   * @generated from field: elys.amm.PoolParams pool_params = 3;
   */
  poolParams?: PoolParams;

  /**
   * @generated from field: repeated elys.amm.PoolAsset pool_assets = 4;
   */
  poolAssets: PoolAsset[] = [];

  constructor(data?: PartialMessage<ProposalCreateBalancerPool>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.amm.ProposalCreateBalancerPool";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "pool_params", kind: "message", T: PoolParams },
    { no: 4, name: "pool_assets", kind: "message", T: PoolAsset, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProposalCreateBalancerPool {
    return new ProposalCreateBalancerPool().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProposalCreateBalancerPool {
    return new ProposalCreateBalancerPool().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProposalCreateBalancerPool {
    return new ProposalCreateBalancerPool().fromJsonString(jsonString, options);
  }

  static equals(a: ProposalCreateBalancerPool | PlainMessage<ProposalCreateBalancerPool> | undefined, b: ProposalCreateBalancerPool | PlainMessage<ProposalCreateBalancerPool> | undefined): boolean {
    return proto3.util.equals(ProposalCreateBalancerPool, a, b);
  }
}

/**
 * @generated from message elys.amm.ProposalUpdatePoolParams
 */
export class ProposalUpdatePoolParams extends Message<ProposalUpdatePoolParams> {
  /**
   * @generated from field: string title = 1;
   */
  title = "";

  /**
   * @generated from field: string description = 2;
   */
  description = "";

  /**
   * @generated from field: uint64 pool_id = 3;
   */
  poolId = protoInt64.zero;

  /**
   * @generated from field: elys.amm.PoolParams pool_params = 4;
   */
  poolParams?: PoolParams;

  constructor(data?: PartialMessage<ProposalUpdatePoolParams>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.amm.ProposalUpdatePoolParams";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "pool_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "pool_params", kind: "message", T: PoolParams },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProposalUpdatePoolParams {
    return new ProposalUpdatePoolParams().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProposalUpdatePoolParams {
    return new ProposalUpdatePoolParams().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProposalUpdatePoolParams {
    return new ProposalUpdatePoolParams().fromJsonString(jsonString, options);
  }

  static equals(a: ProposalUpdatePoolParams | PlainMessage<ProposalUpdatePoolParams> | undefined, b: ProposalUpdatePoolParams | PlainMessage<ProposalUpdatePoolParams> | undefined): boolean {
    return proto3.util.equals(ProposalUpdatePoolParams, a, b);
  }
}

