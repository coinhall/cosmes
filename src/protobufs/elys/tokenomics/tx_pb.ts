// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file elys/tokenomics/tx.proto (package elys.tokenomics, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";
import { InflationEntry } from "./inflation_entry_pb.js";

/**
 * @generated from message elys.tokenomics.MsgCreateAirdrop
 */
export class MsgCreateAirdrop extends Message<MsgCreateAirdrop> {
  /**
   * @generated from field: string authority = 1;
   */
  authority = "";

  /**
   * @generated from field: string intent = 2;
   */
  intent = "";

  /**
   * @generated from field: uint64 amount = 3;
   */
  amount = protoInt64.zero;

  /**
   * @generated from field: uint64 expiry = 4;
   */
  expiry = protoInt64.zero;

  constructor(data?: PartialMessage<MsgCreateAirdrop>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.tokenomics.MsgCreateAirdrop";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "authority", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "intent", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "amount", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "expiry", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgCreateAirdrop {
    return new MsgCreateAirdrop().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgCreateAirdrop {
    return new MsgCreateAirdrop().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgCreateAirdrop {
    return new MsgCreateAirdrop().fromJsonString(jsonString, options);
  }

  static equals(a: MsgCreateAirdrop | PlainMessage<MsgCreateAirdrop> | undefined, b: MsgCreateAirdrop | PlainMessage<MsgCreateAirdrop> | undefined): boolean {
    return proto3.util.equals(MsgCreateAirdrop, a, b);
  }
}

/**
 * @generated from message elys.tokenomics.MsgCreateAirdropResponse
 */
export class MsgCreateAirdropResponse extends Message<MsgCreateAirdropResponse> {
  constructor(data?: PartialMessage<MsgCreateAirdropResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.tokenomics.MsgCreateAirdropResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgCreateAirdropResponse {
    return new MsgCreateAirdropResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgCreateAirdropResponse {
    return new MsgCreateAirdropResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgCreateAirdropResponse {
    return new MsgCreateAirdropResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgCreateAirdropResponse | PlainMessage<MsgCreateAirdropResponse> | undefined, b: MsgCreateAirdropResponse | PlainMessage<MsgCreateAirdropResponse> | undefined): boolean {
    return proto3.util.equals(MsgCreateAirdropResponse, a, b);
  }
}

/**
 * @generated from message elys.tokenomics.MsgUpdateAirdrop
 */
export class MsgUpdateAirdrop extends Message<MsgUpdateAirdrop> {
  /**
   * @generated from field: string authority = 1;
   */
  authority = "";

  /**
   * @generated from field: string intent = 2;
   */
  intent = "";

  /**
   * @generated from field: uint64 amount = 3;
   */
  amount = protoInt64.zero;

  /**
   * @generated from field: uint64 expiry = 4;
   */
  expiry = protoInt64.zero;

  constructor(data?: PartialMessage<MsgUpdateAirdrop>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.tokenomics.MsgUpdateAirdrop";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "authority", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "intent", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "amount", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "expiry", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgUpdateAirdrop {
    return new MsgUpdateAirdrop().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgUpdateAirdrop {
    return new MsgUpdateAirdrop().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgUpdateAirdrop {
    return new MsgUpdateAirdrop().fromJsonString(jsonString, options);
  }

  static equals(a: MsgUpdateAirdrop | PlainMessage<MsgUpdateAirdrop> | undefined, b: MsgUpdateAirdrop | PlainMessage<MsgUpdateAirdrop> | undefined): boolean {
    return proto3.util.equals(MsgUpdateAirdrop, a, b);
  }
}

/**
 * @generated from message elys.tokenomics.MsgUpdateAirdropResponse
 */
export class MsgUpdateAirdropResponse extends Message<MsgUpdateAirdropResponse> {
  constructor(data?: PartialMessage<MsgUpdateAirdropResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.tokenomics.MsgUpdateAirdropResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgUpdateAirdropResponse {
    return new MsgUpdateAirdropResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgUpdateAirdropResponse {
    return new MsgUpdateAirdropResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgUpdateAirdropResponse {
    return new MsgUpdateAirdropResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgUpdateAirdropResponse | PlainMessage<MsgUpdateAirdropResponse> | undefined, b: MsgUpdateAirdropResponse | PlainMessage<MsgUpdateAirdropResponse> | undefined): boolean {
    return proto3.util.equals(MsgUpdateAirdropResponse, a, b);
  }
}

/**
 * @generated from message elys.tokenomics.MsgDeleteAirdrop
 */
export class MsgDeleteAirdrop extends Message<MsgDeleteAirdrop> {
  /**
   * @generated from field: string authority = 1;
   */
  authority = "";

  /**
   * @generated from field: string intent = 2;
   */
  intent = "";

  constructor(data?: PartialMessage<MsgDeleteAirdrop>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.tokenomics.MsgDeleteAirdrop";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "authority", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "intent", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgDeleteAirdrop {
    return new MsgDeleteAirdrop().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgDeleteAirdrop {
    return new MsgDeleteAirdrop().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgDeleteAirdrop {
    return new MsgDeleteAirdrop().fromJsonString(jsonString, options);
  }

  static equals(a: MsgDeleteAirdrop | PlainMessage<MsgDeleteAirdrop> | undefined, b: MsgDeleteAirdrop | PlainMessage<MsgDeleteAirdrop> | undefined): boolean {
    return proto3.util.equals(MsgDeleteAirdrop, a, b);
  }
}

/**
 * @generated from message elys.tokenomics.MsgDeleteAirdropResponse
 */
export class MsgDeleteAirdropResponse extends Message<MsgDeleteAirdropResponse> {
  constructor(data?: PartialMessage<MsgDeleteAirdropResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.tokenomics.MsgDeleteAirdropResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgDeleteAirdropResponse {
    return new MsgDeleteAirdropResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgDeleteAirdropResponse {
    return new MsgDeleteAirdropResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgDeleteAirdropResponse {
    return new MsgDeleteAirdropResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgDeleteAirdropResponse | PlainMessage<MsgDeleteAirdropResponse> | undefined, b: MsgDeleteAirdropResponse | PlainMessage<MsgDeleteAirdropResponse> | undefined): boolean {
    return proto3.util.equals(MsgDeleteAirdropResponse, a, b);
  }
}

/**
 * @generated from message elys.tokenomics.MsgClaimAirdrop
 */
export class MsgClaimAirdrop extends Message<MsgClaimAirdrop> {
  /**
   * @generated from field: string sender = 1;
   */
  sender = "";

  constructor(data?: PartialMessage<MsgClaimAirdrop>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.tokenomics.MsgClaimAirdrop";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "sender", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgClaimAirdrop {
    return new MsgClaimAirdrop().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgClaimAirdrop {
    return new MsgClaimAirdrop().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgClaimAirdrop {
    return new MsgClaimAirdrop().fromJsonString(jsonString, options);
  }

  static equals(a: MsgClaimAirdrop | PlainMessage<MsgClaimAirdrop> | undefined, b: MsgClaimAirdrop | PlainMessage<MsgClaimAirdrop> | undefined): boolean {
    return proto3.util.equals(MsgClaimAirdrop, a, b);
  }
}

/**
 * @generated from message elys.tokenomics.MsgClaimAirdropResponse
 */
export class MsgClaimAirdropResponse extends Message<MsgClaimAirdropResponse> {
  constructor(data?: PartialMessage<MsgClaimAirdropResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.tokenomics.MsgClaimAirdropResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgClaimAirdropResponse {
    return new MsgClaimAirdropResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgClaimAirdropResponse {
    return new MsgClaimAirdropResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgClaimAirdropResponse {
    return new MsgClaimAirdropResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgClaimAirdropResponse | PlainMessage<MsgClaimAirdropResponse> | undefined, b: MsgClaimAirdropResponse | PlainMessage<MsgClaimAirdropResponse> | undefined): boolean {
    return proto3.util.equals(MsgClaimAirdropResponse, a, b);
  }
}

/**
 * @generated from message elys.tokenomics.MsgUpdateGenesisInflation
 */
export class MsgUpdateGenesisInflation extends Message<MsgUpdateGenesisInflation> {
  /**
   * @generated from field: string authority = 1;
   */
  authority = "";

  /**
   * @generated from field: elys.tokenomics.InflationEntry inflation = 3;
   */
  inflation?: InflationEntry;

  /**
   * @generated from field: uint64 seed_vesting = 4;
   */
  seedVesting = protoInt64.zero;

  /**
   * @generated from field: uint64 strategic_sales_vesting = 5;
   */
  strategicSalesVesting = protoInt64.zero;

  constructor(data?: PartialMessage<MsgUpdateGenesisInflation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.tokenomics.MsgUpdateGenesisInflation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "authority", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "inflation", kind: "message", T: InflationEntry },
    { no: 4, name: "seed_vesting", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 5, name: "strategic_sales_vesting", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgUpdateGenesisInflation {
    return new MsgUpdateGenesisInflation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgUpdateGenesisInflation {
    return new MsgUpdateGenesisInflation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgUpdateGenesisInflation {
    return new MsgUpdateGenesisInflation().fromJsonString(jsonString, options);
  }

  static equals(a: MsgUpdateGenesisInflation | PlainMessage<MsgUpdateGenesisInflation> | undefined, b: MsgUpdateGenesisInflation | PlainMessage<MsgUpdateGenesisInflation> | undefined): boolean {
    return proto3.util.equals(MsgUpdateGenesisInflation, a, b);
  }
}

/**
 * @generated from message elys.tokenomics.MsgUpdateGenesisInflationResponse
 */
export class MsgUpdateGenesisInflationResponse extends Message<MsgUpdateGenesisInflationResponse> {
  constructor(data?: PartialMessage<MsgUpdateGenesisInflationResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.tokenomics.MsgUpdateGenesisInflationResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgUpdateGenesisInflationResponse {
    return new MsgUpdateGenesisInflationResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgUpdateGenesisInflationResponse {
    return new MsgUpdateGenesisInflationResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgUpdateGenesisInflationResponse {
    return new MsgUpdateGenesisInflationResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgUpdateGenesisInflationResponse | PlainMessage<MsgUpdateGenesisInflationResponse> | undefined, b: MsgUpdateGenesisInflationResponse | PlainMessage<MsgUpdateGenesisInflationResponse> | undefined): boolean {
    return proto3.util.equals(MsgUpdateGenesisInflationResponse, a, b);
  }
}

/**
 * @generated from message elys.tokenomics.MsgDeleteGenesisInflation
 */
export class MsgDeleteGenesisInflation extends Message<MsgDeleteGenesisInflation> {
  /**
   * @generated from field: string authority = 1;
   */
  authority = "";

  constructor(data?: PartialMessage<MsgDeleteGenesisInflation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.tokenomics.MsgDeleteGenesisInflation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "authority", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgDeleteGenesisInflation {
    return new MsgDeleteGenesisInflation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgDeleteGenesisInflation {
    return new MsgDeleteGenesisInflation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgDeleteGenesisInflation {
    return new MsgDeleteGenesisInflation().fromJsonString(jsonString, options);
  }

  static equals(a: MsgDeleteGenesisInflation | PlainMessage<MsgDeleteGenesisInflation> | undefined, b: MsgDeleteGenesisInflation | PlainMessage<MsgDeleteGenesisInflation> | undefined): boolean {
    return proto3.util.equals(MsgDeleteGenesisInflation, a, b);
  }
}

/**
 * @generated from message elys.tokenomics.MsgCreateTimeBasedInflation
 */
export class MsgCreateTimeBasedInflation extends Message<MsgCreateTimeBasedInflation> {
  /**
   * @generated from field: string authority = 1;
   */
  authority = "";

  /**
   * @generated from field: uint64 start_block_height = 2;
   */
  startBlockHeight = protoInt64.zero;

  /**
   * @generated from field: uint64 end_block_height = 3;
   */
  endBlockHeight = protoInt64.zero;

  /**
   * @generated from field: string description = 4;
   */
  description = "";

  /**
   * @generated from field: elys.tokenomics.InflationEntry inflation = 5;
   */
  inflation?: InflationEntry;

  constructor(data?: PartialMessage<MsgCreateTimeBasedInflation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.tokenomics.MsgCreateTimeBasedInflation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "authority", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "start_block_height", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "end_block_height", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "inflation", kind: "message", T: InflationEntry },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgCreateTimeBasedInflation {
    return new MsgCreateTimeBasedInflation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgCreateTimeBasedInflation {
    return new MsgCreateTimeBasedInflation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgCreateTimeBasedInflation {
    return new MsgCreateTimeBasedInflation().fromJsonString(jsonString, options);
  }

  static equals(a: MsgCreateTimeBasedInflation | PlainMessage<MsgCreateTimeBasedInflation> | undefined, b: MsgCreateTimeBasedInflation | PlainMessage<MsgCreateTimeBasedInflation> | undefined): boolean {
    return proto3.util.equals(MsgCreateTimeBasedInflation, a, b);
  }
}

/**
 * @generated from message elys.tokenomics.MsgCreateTimeBasedInflationResponse
 */
export class MsgCreateTimeBasedInflationResponse extends Message<MsgCreateTimeBasedInflationResponse> {
  constructor(data?: PartialMessage<MsgCreateTimeBasedInflationResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.tokenomics.MsgCreateTimeBasedInflationResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgCreateTimeBasedInflationResponse {
    return new MsgCreateTimeBasedInflationResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgCreateTimeBasedInflationResponse {
    return new MsgCreateTimeBasedInflationResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgCreateTimeBasedInflationResponse {
    return new MsgCreateTimeBasedInflationResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgCreateTimeBasedInflationResponse | PlainMessage<MsgCreateTimeBasedInflationResponse> | undefined, b: MsgCreateTimeBasedInflationResponse | PlainMessage<MsgCreateTimeBasedInflationResponse> | undefined): boolean {
    return proto3.util.equals(MsgCreateTimeBasedInflationResponse, a, b);
  }
}

/**
 * @generated from message elys.tokenomics.MsgUpdateTimeBasedInflation
 */
export class MsgUpdateTimeBasedInflation extends Message<MsgUpdateTimeBasedInflation> {
  /**
   * @generated from field: string authority = 1;
   */
  authority = "";

  /**
   * @generated from field: uint64 start_block_height = 2;
   */
  startBlockHeight = protoInt64.zero;

  /**
   * @generated from field: uint64 end_block_height = 3;
   */
  endBlockHeight = protoInt64.zero;

  /**
   * @generated from field: string description = 4;
   */
  description = "";

  /**
   * @generated from field: elys.tokenomics.InflationEntry inflation = 5;
   */
  inflation?: InflationEntry;

  constructor(data?: PartialMessage<MsgUpdateTimeBasedInflation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.tokenomics.MsgUpdateTimeBasedInflation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "authority", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "start_block_height", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "end_block_height", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "inflation", kind: "message", T: InflationEntry },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgUpdateTimeBasedInflation {
    return new MsgUpdateTimeBasedInflation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgUpdateTimeBasedInflation {
    return new MsgUpdateTimeBasedInflation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgUpdateTimeBasedInflation {
    return new MsgUpdateTimeBasedInflation().fromJsonString(jsonString, options);
  }

  static equals(a: MsgUpdateTimeBasedInflation | PlainMessage<MsgUpdateTimeBasedInflation> | undefined, b: MsgUpdateTimeBasedInflation | PlainMessage<MsgUpdateTimeBasedInflation> | undefined): boolean {
    return proto3.util.equals(MsgUpdateTimeBasedInflation, a, b);
  }
}

/**
 * @generated from message elys.tokenomics.MsgUpdateTimeBasedInflationResponse
 */
export class MsgUpdateTimeBasedInflationResponse extends Message<MsgUpdateTimeBasedInflationResponse> {
  constructor(data?: PartialMessage<MsgUpdateTimeBasedInflationResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.tokenomics.MsgUpdateTimeBasedInflationResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgUpdateTimeBasedInflationResponse {
    return new MsgUpdateTimeBasedInflationResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgUpdateTimeBasedInflationResponse {
    return new MsgUpdateTimeBasedInflationResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgUpdateTimeBasedInflationResponse {
    return new MsgUpdateTimeBasedInflationResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgUpdateTimeBasedInflationResponse | PlainMessage<MsgUpdateTimeBasedInflationResponse> | undefined, b: MsgUpdateTimeBasedInflationResponse | PlainMessage<MsgUpdateTimeBasedInflationResponse> | undefined): boolean {
    return proto3.util.equals(MsgUpdateTimeBasedInflationResponse, a, b);
  }
}

/**
 * @generated from message elys.tokenomics.MsgDeleteTimeBasedInflation
 */
export class MsgDeleteTimeBasedInflation extends Message<MsgDeleteTimeBasedInflation> {
  /**
   * @generated from field: string authority = 1;
   */
  authority = "";

  /**
   * @generated from field: uint64 start_block_height = 2;
   */
  startBlockHeight = protoInt64.zero;

  /**
   * @generated from field: uint64 end_block_height = 3;
   */
  endBlockHeight = protoInt64.zero;

  constructor(data?: PartialMessage<MsgDeleteTimeBasedInflation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.tokenomics.MsgDeleteTimeBasedInflation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "authority", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "start_block_height", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "end_block_height", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgDeleteTimeBasedInflation {
    return new MsgDeleteTimeBasedInflation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgDeleteTimeBasedInflation {
    return new MsgDeleteTimeBasedInflation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgDeleteTimeBasedInflation {
    return new MsgDeleteTimeBasedInflation().fromJsonString(jsonString, options);
  }

  static equals(a: MsgDeleteTimeBasedInflation | PlainMessage<MsgDeleteTimeBasedInflation> | undefined, b: MsgDeleteTimeBasedInflation | PlainMessage<MsgDeleteTimeBasedInflation> | undefined): boolean {
    return proto3.util.equals(MsgDeleteTimeBasedInflation, a, b);
  }
}

/**
 * @generated from message elys.tokenomics.MsgDeleteTimeBasedInflationResponse
 */
export class MsgDeleteTimeBasedInflationResponse extends Message<MsgDeleteTimeBasedInflationResponse> {
  constructor(data?: PartialMessage<MsgDeleteTimeBasedInflationResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.tokenomics.MsgDeleteTimeBasedInflationResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgDeleteTimeBasedInflationResponse {
    return new MsgDeleteTimeBasedInflationResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgDeleteTimeBasedInflationResponse {
    return new MsgDeleteTimeBasedInflationResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgDeleteTimeBasedInflationResponse {
    return new MsgDeleteTimeBasedInflationResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgDeleteTimeBasedInflationResponse | PlainMessage<MsgDeleteTimeBasedInflationResponse> | undefined, b: MsgDeleteTimeBasedInflationResponse | PlainMessage<MsgDeleteTimeBasedInflationResponse> | undefined): boolean {
    return proto3.util.equals(MsgDeleteTimeBasedInflationResponse, a, b);
  }
}

