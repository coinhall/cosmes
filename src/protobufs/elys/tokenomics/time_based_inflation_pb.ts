// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file elys/tokenomics/time_based_inflation.proto (package elys.tokenomics, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";
import { InflationEntry } from "./inflation_entry_pb.js";

/**
 * @generated from message elys.tokenomics.TimeBasedInflation
 */
export class TimeBasedInflation extends Message<TimeBasedInflation> {
  /**
   * @generated from field: uint64 start_block_height = 1;
   */
  startBlockHeight = protoInt64.zero;

  /**
   * @generated from field: uint64 end_block_height = 2;
   */
  endBlockHeight = protoInt64.zero;

  /**
   * @generated from field: string description = 3;
   */
  description = "";

  /**
   * @generated from field: elys.tokenomics.InflationEntry inflation = 4;
   */
  inflation?: InflationEntry;

  /**
   * @generated from field: string authority = 5;
   */
  authority = "";

  constructor(data?: PartialMessage<TimeBasedInflation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.tokenomics.TimeBasedInflation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "start_block_height", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "end_block_height", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "inflation", kind: "message", T: InflationEntry },
    { no: 5, name: "authority", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TimeBasedInflation {
    return new TimeBasedInflation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TimeBasedInflation {
    return new TimeBasedInflation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TimeBasedInflation {
    return new TimeBasedInflation().fromJsonString(jsonString, options);
  }

  static equals(a: TimeBasedInflation | PlainMessage<TimeBasedInflation> | undefined, b: TimeBasedInflation | PlainMessage<TimeBasedInflation> | undefined): boolean {
    return proto3.util.equals(TimeBasedInflation, a, b);
  }
}

