// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file elys/assetprofile/query.proto (package elys.assetprofile, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { Params } from "./params_pb.js";
import { Entry } from "./entry_pb.js";
import { PageRequest, PageResponse } from "../../cosmos/base/query/v1beta1/pagination_pb.js";

/**
 * QueryParamsRequest is request type for the Query/Params RPC method.
 *
 * @generated from message elys.assetprofile.QueryParamsRequest
 */
export class QueryParamsRequest extends Message<QueryParamsRequest> {
  constructor(data?: PartialMessage<QueryParamsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.assetprofile.QueryParamsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryParamsRequest {
    return new QueryParamsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryParamsRequest {
    return new QueryParamsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryParamsRequest {
    return new QueryParamsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryParamsRequest | PlainMessage<QueryParamsRequest> | undefined, b: QueryParamsRequest | PlainMessage<QueryParamsRequest> | undefined): boolean {
    return proto3.util.equals(QueryParamsRequest, a, b);
  }
}

/**
 * QueryParamsResponse is response type for the Query/Params RPC method.
 *
 * @generated from message elys.assetprofile.QueryParamsResponse
 */
export class QueryParamsResponse extends Message<QueryParamsResponse> {
  /**
   * params holds all the parameters of this module.
   *
   * @generated from field: elys.assetprofile.Params params = 1;
   */
  params?: Params;

  constructor(data?: PartialMessage<QueryParamsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.assetprofile.QueryParamsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "params", kind: "message", T: Params },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryParamsResponse {
    return new QueryParamsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryParamsResponse {
    return new QueryParamsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryParamsResponse {
    return new QueryParamsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryParamsResponse | PlainMessage<QueryParamsResponse> | undefined, b: QueryParamsResponse | PlainMessage<QueryParamsResponse> | undefined): boolean {
    return proto3.util.equals(QueryParamsResponse, a, b);
  }
}

/**
 * @generated from message elys.assetprofile.QueryGetEntryRequest
 */
export class QueryGetEntryRequest extends Message<QueryGetEntryRequest> {
  /**
   * @generated from field: string base_denom = 1;
   */
  baseDenom = "";

  constructor(data?: PartialMessage<QueryGetEntryRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.assetprofile.QueryGetEntryRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "base_denom", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryGetEntryRequest {
    return new QueryGetEntryRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryGetEntryRequest {
    return new QueryGetEntryRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryGetEntryRequest {
    return new QueryGetEntryRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryGetEntryRequest | PlainMessage<QueryGetEntryRequest> | undefined, b: QueryGetEntryRequest | PlainMessage<QueryGetEntryRequest> | undefined): boolean {
    return proto3.util.equals(QueryGetEntryRequest, a, b);
  }
}

/**
 * @generated from message elys.assetprofile.QueryGetEntryByDenomRequest
 */
export class QueryGetEntryByDenomRequest extends Message<QueryGetEntryByDenomRequest> {
  /**
   * @generated from field: string denom = 1;
   */
  denom = "";

  constructor(data?: PartialMessage<QueryGetEntryByDenomRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.assetprofile.QueryGetEntryByDenomRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "denom", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryGetEntryByDenomRequest {
    return new QueryGetEntryByDenomRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryGetEntryByDenomRequest {
    return new QueryGetEntryByDenomRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryGetEntryByDenomRequest {
    return new QueryGetEntryByDenomRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryGetEntryByDenomRequest | PlainMessage<QueryGetEntryByDenomRequest> | undefined, b: QueryGetEntryByDenomRequest | PlainMessage<QueryGetEntryByDenomRequest> | undefined): boolean {
    return proto3.util.equals(QueryGetEntryByDenomRequest, a, b);
  }
}

/**
 * @generated from message elys.assetprofile.QueryGetEntryResponse
 */
export class QueryGetEntryResponse extends Message<QueryGetEntryResponse> {
  /**
   * @generated from field: elys.assetprofile.Entry entry = 1;
   */
  entry?: Entry;

  constructor(data?: PartialMessage<QueryGetEntryResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.assetprofile.QueryGetEntryResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "entry", kind: "message", T: Entry },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryGetEntryResponse {
    return new QueryGetEntryResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryGetEntryResponse {
    return new QueryGetEntryResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryGetEntryResponse {
    return new QueryGetEntryResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryGetEntryResponse | PlainMessage<QueryGetEntryResponse> | undefined, b: QueryGetEntryResponse | PlainMessage<QueryGetEntryResponse> | undefined): boolean {
    return proto3.util.equals(QueryGetEntryResponse, a, b);
  }
}

/**
 * @generated from message elys.assetprofile.QueryGetEntryByDenomResponse
 */
export class QueryGetEntryByDenomResponse extends Message<QueryGetEntryByDenomResponse> {
  /**
   * @generated from field: elys.assetprofile.Entry entry = 1;
   */
  entry?: Entry;

  constructor(data?: PartialMessage<QueryGetEntryByDenomResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.assetprofile.QueryGetEntryByDenomResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "entry", kind: "message", T: Entry },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryGetEntryByDenomResponse {
    return new QueryGetEntryByDenomResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryGetEntryByDenomResponse {
    return new QueryGetEntryByDenomResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryGetEntryByDenomResponse {
    return new QueryGetEntryByDenomResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryGetEntryByDenomResponse | PlainMessage<QueryGetEntryByDenomResponse> | undefined, b: QueryGetEntryByDenomResponse | PlainMessage<QueryGetEntryByDenomResponse> | undefined): boolean {
    return proto3.util.equals(QueryGetEntryByDenomResponse, a, b);
  }
}

/**
 * @generated from message elys.assetprofile.QueryAllEntryRequest
 */
export class QueryAllEntryRequest extends Message<QueryAllEntryRequest> {
  /**
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 1;
   */
  pagination?: PageRequest;

  constructor(data?: PartialMessage<QueryAllEntryRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.assetprofile.QueryAllEntryRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "pagination", kind: "message", T: PageRequest },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllEntryRequest {
    return new QueryAllEntryRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllEntryRequest {
    return new QueryAllEntryRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllEntryRequest {
    return new QueryAllEntryRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllEntryRequest | PlainMessage<QueryAllEntryRequest> | undefined, b: QueryAllEntryRequest | PlainMessage<QueryAllEntryRequest> | undefined): boolean {
    return proto3.util.equals(QueryAllEntryRequest, a, b);
  }
}

/**
 * @generated from message elys.assetprofile.QueryAllEntryResponse
 */
export class QueryAllEntryResponse extends Message<QueryAllEntryResponse> {
  /**
   * @generated from field: repeated elys.assetprofile.Entry entry = 1;
   */
  entry: Entry[] = [];

  /**
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;

  constructor(data?: PartialMessage<QueryAllEntryResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "elys.assetprofile.QueryAllEntryResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "entry", kind: "message", T: Entry, repeated: true },
    { no: 2, name: "pagination", kind: "message", T: PageResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAllEntryResponse {
    return new QueryAllEntryResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAllEntryResponse {
    return new QueryAllEntryResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAllEntryResponse {
    return new QueryAllEntryResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryAllEntryResponse | PlainMessage<QueryAllEntryResponse> | undefined, b: QueryAllEntryResponse | PlainMessage<QueryAllEntryResponse> | undefined): boolean {
    return proto3.util.equals(QueryAllEntryResponse, a, b);
  }
}

