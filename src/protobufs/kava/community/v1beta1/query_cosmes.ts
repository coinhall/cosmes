// @generated by protoc-gen-cosmes v0.0.1 with parameter "target=ts"
// @generated from file kava/community/v1beta1/query.proto (package kava.community.v1beta1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { QueryAnnualizedRewardsRequest, QueryAnnualizedRewardsResponse, QueryBalanceRequest, QueryBalanceResponse, QueryParamsRequest, QueryParamsResponse, QueryTotalBalanceRequest, QueryTotalBalanceResponse } from "./query_pb.js";

const TYPE_NAME = "kava.community.v1beta1.Query";

/**
 * Params queires the module params.
 *
 * @generated from rpc kava.community.v1beta1.Query.Params
 */
export const QueryParamsService = {
  typeName: TYPE_NAME,
  method: "Params",
  Request: QueryParamsRequest,
  Response: QueryParamsResponse,
} as const;

/**
 * Balance queries the balance of all coins of x/community module.
 *
 * @generated from rpc kava.community.v1beta1.Query.Balance
 */
export const QueryBalanceService = {
  typeName: TYPE_NAME,
  method: "Balance",
  Request: QueryBalanceRequest,
  Response: QueryBalanceResponse,
} as const;

/**
 * TotalBalance queries the balance of all coins, including x/distribution,
 * x/community, and supplied balances.
 *
 * @generated from rpc kava.community.v1beta1.Query.TotalBalance
 */
export const QueryTotalBalanceService = {
  typeName: TYPE_NAME,
  method: "TotalBalance",
  Request: QueryTotalBalanceRequest,
  Response: QueryTotalBalanceResponse,
} as const;

/**
 * AnnualizedRewards calculates and returns the current annualized reward percentages,
 * like staking rewards, for the chain.
 *
 * @generated from rpc kava.community.v1beta1.Query.AnnualizedRewards
 */
export const QueryAnnualizedRewardsService = {
  typeName: TYPE_NAME,
  method: "AnnualizedRewards",
  Request: QueryAnnualizedRewardsRequest,
  Response: QueryAnnualizedRewardsResponse,
} as const;

