// @generated by protoc-gen-cosmes v0.0.1 with parameter "target=ts"
// @generated from file kava/issuance/v1beta1/tx.proto (package kava.issuance.v1beta1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { MsgBlockAddress, MsgBlockAddressResponse, MsgIssueTokens, MsgIssueTokensResponse, MsgRedeemTokens, MsgRedeemTokensResponse, MsgSetPauseStatus, MsgSetPauseStatusResponse, MsgUnblockAddress, MsgUnblockAddressResponse } from "./tx_pb.js";

const TYPE_NAME = "kava.issuance.v1beta1.Msg";

/**
 * IssueTokens message type used by the issuer to issue new tokens
 *
 * @generated from rpc kava.issuance.v1beta1.Msg.IssueTokens
 */
export const MsgIssueTokensService = {
  typeName: TYPE_NAME,
  method: "IssueTokens",
  Request: MsgIssueTokens,
  Response: MsgIssueTokensResponse,
} as const;

/**
 * RedeemTokens message type used by the issuer to redeem (burn) tokens
 *
 * @generated from rpc kava.issuance.v1beta1.Msg.RedeemTokens
 */
export const MsgRedeemTokensService = {
  typeName: TYPE_NAME,
  method: "RedeemTokens",
  Request: MsgRedeemTokens,
  Response: MsgRedeemTokensResponse,
} as const;

/**
 * BlockAddress message type used by the issuer to block an address from holding or transferring tokens
 *
 * @generated from rpc kava.issuance.v1beta1.Msg.BlockAddress
 */
export const MsgBlockAddressService = {
  typeName: TYPE_NAME,
  method: "BlockAddress",
  Request: MsgBlockAddress,
  Response: MsgBlockAddressResponse,
} as const;

/**
 * UnblockAddress message type used by the issuer to unblock an address from holding or transferring tokens
 *
 * @generated from rpc kava.issuance.v1beta1.Msg.UnblockAddress
 */
export const MsgUnblockAddressService = {
  typeName: TYPE_NAME,
  method: "UnblockAddress",
  Request: MsgUnblockAddress,
  Response: MsgUnblockAddressResponse,
} as const;

/**
 * SetPauseStatus message type used to pause or unpause status
 *
 * @generated from rpc kava.issuance.v1beta1.Msg.SetPauseStatus
 */
export const MsgSetPauseStatusService = {
  typeName: TYPE_NAME,
  method: "SetPauseStatus",
  Request: MsgSetPauseStatus,
  Response: MsgSetPauseStatusResponse,
} as const;

