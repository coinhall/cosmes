// @generated by protoc-gen-cosmes v0.0.1 with parameter "target=ts"
// @generated from file kava/hard/v1beta1/query.proto (package kava.hard.v1beta1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { QueryAccountsRequest, QueryAccountsResponse, QueryBorrowsRequest, QueryBorrowsResponse, QueryDepositsRequest, QueryDepositsResponse, QueryInterestFactorsRequest, QueryInterestFactorsResponse, QueryInterestRateRequest, QueryInterestRateResponse, QueryParamsRequest, QueryParamsResponse, QueryReservesRequest, QueryReservesResponse, QueryTotalBorrowedRequest, QueryTotalBorrowedResponse, QueryTotalDepositedRequest, QueryTotalDepositedResponse, QueryUnsyncedBorrowsRequest, QueryUnsyncedBorrowsResponse, QueryUnsyncedDepositsRequest, QueryUnsyncedDepositsResponse } from "./query_pb.js";

const TYPE_NAME = "kava.hard.v1beta1.Query";

/**
 * Params queries module params.
 *
 * @generated from rpc kava.hard.v1beta1.Query.Params
 */
export const QueryParamsService = {
  typeName: TYPE_NAME,
  method: "Params",
  Request: QueryParamsRequest,
  Response: QueryParamsResponse,
} as const;

/**
 * Accounts queries module accounts.
 *
 * @generated from rpc kava.hard.v1beta1.Query.Accounts
 */
export const QueryAccountsService = {
  typeName: TYPE_NAME,
  method: "Accounts",
  Request: QueryAccountsRequest,
  Response: QueryAccountsResponse,
} as const;

/**
 * Deposits queries hard deposits.
 *
 * @generated from rpc kava.hard.v1beta1.Query.Deposits
 */
export const QueryDepositsService = {
  typeName: TYPE_NAME,
  method: "Deposits",
  Request: QueryDepositsRequest,
  Response: QueryDepositsResponse,
} as const;

/**
 * UnsyncedDeposits queries unsynced deposits.
 *
 * @generated from rpc kava.hard.v1beta1.Query.UnsyncedDeposits
 */
export const QueryUnsyncedDepositsService = {
  typeName: TYPE_NAME,
  method: "UnsyncedDeposits",
  Request: QueryUnsyncedDepositsRequest,
  Response: QueryUnsyncedDepositsResponse,
} as const;

/**
 * TotalDeposited queries total coins deposited to hard liquidity pools.
 *
 * @generated from rpc kava.hard.v1beta1.Query.TotalDeposited
 */
export const QueryTotalDepositedService = {
  typeName: TYPE_NAME,
  method: "TotalDeposited",
  Request: QueryTotalDepositedRequest,
  Response: QueryTotalDepositedResponse,
} as const;

/**
 * Borrows queries hard borrows.
 *
 * @generated from rpc kava.hard.v1beta1.Query.Borrows
 */
export const QueryBorrowsService = {
  typeName: TYPE_NAME,
  method: "Borrows",
  Request: QueryBorrowsRequest,
  Response: QueryBorrowsResponse,
} as const;

/**
 * UnsyncedBorrows queries unsynced borrows.
 *
 * @generated from rpc kava.hard.v1beta1.Query.UnsyncedBorrows
 */
export const QueryUnsyncedBorrowsService = {
  typeName: TYPE_NAME,
  method: "UnsyncedBorrows",
  Request: QueryUnsyncedBorrowsRequest,
  Response: QueryUnsyncedBorrowsResponse,
} as const;

/**
 * TotalBorrowed queries total coins borrowed from hard liquidity pools.
 *
 * @generated from rpc kava.hard.v1beta1.Query.TotalBorrowed
 */
export const QueryTotalBorrowedService = {
  typeName: TYPE_NAME,
  method: "TotalBorrowed",
  Request: QueryTotalBorrowedRequest,
  Response: QueryTotalBorrowedResponse,
} as const;

/**
 * InterestRate queries the hard module interest rates.
 *
 * @generated from rpc kava.hard.v1beta1.Query.InterestRate
 */
export const QueryInterestRateService = {
  typeName: TYPE_NAME,
  method: "InterestRate",
  Request: QueryInterestRateRequest,
  Response: QueryInterestRateResponse,
} as const;

/**
 * Reserves queries total hard reserve coins.
 *
 * @generated from rpc kava.hard.v1beta1.Query.Reserves
 */
export const QueryReservesService = {
  typeName: TYPE_NAME,
  method: "Reserves",
  Request: QueryReservesRequest,
  Response: QueryReservesResponse,
} as const;

/**
 * InterestFactors queries hard module interest factors.
 *
 * @generated from rpc kava.hard.v1beta1.Query.InterestFactors
 */
export const QueryInterestFactorsService = {
  typeName: TYPE_NAME,
  method: "InterestFactors",
  Request: QueryInterestFactorsRequest,
  Response: QueryInterestFactorsResponse,
} as const;

