// @generated by protoc-gen-cosmes v0.0.1 with parameter "target=ts"
// @generated from file kava/hard/v1beta1/tx.proto (package kava.hard.v1beta1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { MsgBorrow, MsgBorrowResponse, MsgDeposit, MsgDepositResponse, MsgLiquidate, MsgLiquidateResponse, MsgRepay, MsgRepayResponse, MsgWithdraw, MsgWithdrawResponse } from "./tx_pb.js";

const TYPE_NAME = "kava.hard.v1beta1.Msg";

/**
 * Deposit defines a method for depositing funds to hard liquidity pool.
 *
 * @generated from rpc kava.hard.v1beta1.Msg.Deposit
 */
export const MsgDepositService = {
  typeName: TYPE_NAME,
  method: "Deposit",
  Request: MsgDeposit,
  Response: MsgDepositResponse,
} as const;

/**
 * Withdraw defines a method for withdrawing funds from hard liquidity pool.
 *
 * @generated from rpc kava.hard.v1beta1.Msg.Withdraw
 */
export const MsgWithdrawService = {
  typeName: TYPE_NAME,
  method: "Withdraw",
  Request: MsgWithdraw,
  Response: MsgWithdrawResponse,
} as const;

/**
 * Borrow defines a method for borrowing funds from hard liquidity pool.
 *
 * @generated from rpc kava.hard.v1beta1.Msg.Borrow
 */
export const MsgBorrowService = {
  typeName: TYPE_NAME,
  method: "Borrow",
  Request: MsgBorrow,
  Response: MsgBorrowResponse,
} as const;

/**
 * Repay defines a method for repaying funds borrowed from hard liquidity pool.
 *
 * @generated from rpc kava.hard.v1beta1.Msg.Repay
 */
export const MsgRepayService = {
  typeName: TYPE_NAME,
  method: "Repay",
  Request: MsgRepay,
  Response: MsgRepayResponse,
} as const;

/**
 * Liquidate defines a method for attempting to liquidate a borrower that is over their loan-to-value.
 *
 * @generated from rpc kava.hard.v1beta1.Msg.Liquidate
 */
export const MsgLiquidateService = {
  typeName: TYPE_NAME,
  method: "Liquidate",
  Request: MsgLiquidate,
  Response: MsgLiquidateResponse,
} as const;

