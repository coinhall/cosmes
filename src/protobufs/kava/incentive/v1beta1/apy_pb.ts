// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file kava/incentive/v1beta1/apy.proto (package kava.incentive.v1beta1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * Apy contains the calculated APY for a given collateral type at a specific
 * instant in time.
 *
 * @generated from message kava.incentive.v1beta1.Apy
 */
export class Apy extends Message<Apy> {
  /**
   * @generated from field: string collateral_type = 1;
   */
  collateralType = "";

  /**
   * @generated from field: string apy = 2;
   */
  apy = "";

  constructor(data?: PartialMessage<Apy>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "kava.incentive.v1beta1.Apy";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "collateral_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "apy", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Apy {
    return new Apy().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Apy {
    return new Apy().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Apy {
    return new Apy().fromJsonString(jsonString, options);
  }

  static equals(a: Apy | PlainMessage<Apy> | undefined, b: Apy | PlainMessage<Apy> | undefined): boolean {
    return proto3.util.equals(Apy, a, b);
  }
}

