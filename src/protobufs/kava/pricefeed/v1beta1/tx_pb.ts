// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file kava/pricefeed/v1beta1/tx.proto (package kava.pricefeed.v1beta1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, Timestamp } from "@bufbuild/protobuf";

/**
 * MsgPostPrice represents a method for creating a new post price
 *
 * @generated from message kava.pricefeed.v1beta1.MsgPostPrice
 */
export class MsgPostPrice extends Message<MsgPostPrice> {
  /**
   * address of client
   *
   * @generated from field: string from = 1;
   */
  from = "";

  /**
   * @generated from field: string market_id = 2;
   */
  marketId = "";

  /**
   * @generated from field: string price = 3;
   */
  price = "";

  /**
   * @generated from field: google.protobuf.Timestamp expiry = 4;
   */
  expiry?: Timestamp;

  constructor(data?: PartialMessage<MsgPostPrice>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "kava.pricefeed.v1beta1.MsgPostPrice";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "from", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "market_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "price", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "expiry", kind: "message", T: Timestamp },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgPostPrice {
    return new MsgPostPrice().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgPostPrice {
    return new MsgPostPrice().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgPostPrice {
    return new MsgPostPrice().fromJsonString(jsonString, options);
  }

  static equals(a: MsgPostPrice | PlainMessage<MsgPostPrice> | undefined, b: MsgPostPrice | PlainMessage<MsgPostPrice> | undefined): boolean {
    return proto3.util.equals(MsgPostPrice, a, b);
  }
}

/**
 * MsgPostPriceResponse defines the Msg/PostPrice response type.
 *
 * @generated from message kava.pricefeed.v1beta1.MsgPostPriceResponse
 */
export class MsgPostPriceResponse extends Message<MsgPostPriceResponse> {
  constructor(data?: PartialMessage<MsgPostPriceResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "kava.pricefeed.v1beta1.MsgPostPriceResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgPostPriceResponse {
    return new MsgPostPriceResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgPostPriceResponse {
    return new MsgPostPriceResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgPostPriceResponse {
    return new MsgPostPriceResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgPostPriceResponse | PlainMessage<MsgPostPriceResponse> | undefined, b: MsgPostPriceResponse | PlainMessage<MsgPostPriceResponse> | undefined): boolean {
    return proto3.util.equals(MsgPostPriceResponse, a, b);
  }
}

