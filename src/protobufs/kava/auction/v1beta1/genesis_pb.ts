// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file kava/auction/v1beta1/genesis.proto (package kava.auction.v1beta1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Any, Duration, Message, proto3, protoInt64 } from "@bufbuild/protobuf";

/**
 * GenesisState defines the auction module's genesis state.
 *
 * @generated from message kava.auction.v1beta1.GenesisState
 */
export class GenesisState extends Message<GenesisState> {
  /**
   * @generated from field: uint64 next_auction_id = 1;
   */
  nextAuctionId = protoInt64.zero;

  /**
   * @generated from field: kava.auction.v1beta1.Params params = 2;
   */
  params?: Params;

  /**
   * Genesis auctions
   *
   * @generated from field: repeated google.protobuf.Any auctions = 3;
   */
  auctions: Any[] = [];

  constructor(data?: PartialMessage<GenesisState>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "kava.auction.v1beta1.GenesisState";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "next_auction_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "params", kind: "message", T: Params },
    { no: 3, name: "auctions", kind: "message", T: Any, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenesisState {
    return new GenesisState().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenesisState {
    return new GenesisState().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenesisState {
    return new GenesisState().fromJsonString(jsonString, options);
  }

  static equals(a: GenesisState | PlainMessage<GenesisState> | undefined, b: GenesisState | PlainMessage<GenesisState> | undefined): boolean {
    return proto3.util.equals(GenesisState, a, b);
  }
}

/**
 * Params defines the parameters for the issuance module.
 *
 * @generated from message kava.auction.v1beta1.Params
 */
export class Params extends Message<Params> {
  /**
   * @generated from field: google.protobuf.Duration max_auction_duration = 1;
   */
  maxAuctionDuration?: Duration;

  /**
   * @generated from field: google.protobuf.Duration forward_bid_duration = 6;
   */
  forwardBidDuration?: Duration;

  /**
   * @generated from field: google.protobuf.Duration reverse_bid_duration = 7;
   */
  reverseBidDuration?: Duration;

  /**
   * @generated from field: bytes increment_surplus = 3;
   */
  incrementSurplus = new Uint8Array(0);

  /**
   * @generated from field: bytes increment_debt = 4;
   */
  incrementDebt = new Uint8Array(0);

  /**
   * @generated from field: bytes increment_collateral = 5;
   */
  incrementCollateral = new Uint8Array(0);

  constructor(data?: PartialMessage<Params>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "kava.auction.v1beta1.Params";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "max_auction_duration", kind: "message", T: Duration },
    { no: 6, name: "forward_bid_duration", kind: "message", T: Duration },
    { no: 7, name: "reverse_bid_duration", kind: "message", T: Duration },
    { no: 3, name: "increment_surplus", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 4, name: "increment_debt", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 5, name: "increment_collateral", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Params {
    return new Params().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Params {
    return new Params().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Params {
    return new Params().fromJsonString(jsonString, options);
  }

  static equals(a: Params | PlainMessage<Params> | undefined, b: Params | PlainMessage<Params> | undefined): boolean {
    return proto3.util.equals(Params, a, b);
  }
}

