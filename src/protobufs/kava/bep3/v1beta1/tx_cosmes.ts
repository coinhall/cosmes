// @generated by protoc-gen-cosmes v0.0.1 with parameter "target=ts"
// @generated from file kava/bep3/v1beta1/tx.proto (package kava.bep3.v1beta1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { MsgClaimAtomicSwap, MsgClaimAtomicSwapResponse, MsgCreateAtomicSwap, MsgCreateAtomicSwapResponse, MsgRefundAtomicSwap, MsgRefundAtomicSwapResponse } from "./tx_pb.js";

const TYPE_NAME = "kava.bep3.v1beta1.Msg";

/**
 * CreateAtomicSwap defines a method for creating an atomic swap
 *
 * @generated from rpc kava.bep3.v1beta1.Msg.CreateAtomicSwap
 */
export const MsgCreateAtomicSwapService = {
  typeName: TYPE_NAME,
  method: "CreateAtomicSwap",
  Request: MsgCreateAtomicSwap,
  Response: MsgCreateAtomicSwapResponse,
} as const;

/**
 * ClaimAtomicSwap defines a method for claiming an atomic swap
 *
 * @generated from rpc kava.bep3.v1beta1.Msg.ClaimAtomicSwap
 */
export const MsgClaimAtomicSwapService = {
  typeName: TYPE_NAME,
  method: "ClaimAtomicSwap",
  Request: MsgClaimAtomicSwap,
  Response: MsgClaimAtomicSwapResponse,
} as const;

/**
 * RefundAtomicSwap defines a method for refunding an atomic swap
 *
 * @generated from rpc kava.bep3.v1beta1.Msg.RefundAtomicSwap
 */
export const MsgRefundAtomicSwapService = {
  typeName: TYPE_NAME,
  method: "RefundAtomicSwap",
  Request: MsgRefundAtomicSwap,
  Response: MsgRefundAtomicSwapResponse,
} as const;

