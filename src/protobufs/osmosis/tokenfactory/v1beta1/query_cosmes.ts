// @generated by protoc-gen-cosmes v0.0.1 with parameter "target=ts"
// @generated from file osmosis/tokenfactory/v1beta1/query.proto (package osmosis.tokenfactory.v1beta1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { QueryAllBeforeSendHooksAddressesRequest, QueryAllBeforeSendHooksAddressesResponse, QueryBeforeSendHookAddressRequest, QueryBeforeSendHookAddressResponse, QueryDenomAuthorityMetadataRequest, QueryDenomAuthorityMetadataResponse, QueryDenomsFromCreatorRequest, QueryDenomsFromCreatorResponse, QueryParamsRequest, QueryParamsResponse } from "./query_pb.js";

const TYPE_NAME = "osmosis.tokenfactory.v1beta1.Query";

/**
 * Params defines a gRPC query method that returns the tokenfactory module's
 * parameters.
 *
 * @generated from rpc osmosis.tokenfactory.v1beta1.Query.Params
 */
export const QueryParamsService = {
  typeName: TYPE_NAME,
  method: "Params",
  Request: QueryParamsRequest,
  Response: QueryParamsResponse,
} as const;

/**
 * DenomAuthorityMetadata defines a gRPC query method for fetching
 * DenomAuthorityMetadata for a particular denom.
 *
 * @generated from rpc osmosis.tokenfactory.v1beta1.Query.DenomAuthorityMetadata
 */
export const QueryDenomAuthorityMetadataService = {
  typeName: TYPE_NAME,
  method: "DenomAuthorityMetadata",
  Request: QueryDenomAuthorityMetadataRequest,
  Response: QueryDenomAuthorityMetadataResponse,
} as const;

/**
 * DenomsFromCreator defines a gRPC query method for fetching all
 * denominations created by a specific admin/creator.
 *
 * @generated from rpc osmosis.tokenfactory.v1beta1.Query.DenomsFromCreator
 */
export const QueryDenomsFromCreatorService = {
  typeName: TYPE_NAME,
  method: "DenomsFromCreator",
  Request: QueryDenomsFromCreatorRequest,
  Response: QueryDenomsFromCreatorResponse,
} as const;

/**
 * BeforeSendHookAddress defines a gRPC query method for
 * getting the address registered for the before send hook.
 *
 * @generated from rpc osmosis.tokenfactory.v1beta1.Query.BeforeSendHookAddress
 */
export const QueryBeforeSendHookAddressService = {
  typeName: TYPE_NAME,
  method: "BeforeSendHookAddress",
  Request: QueryBeforeSendHookAddressRequest,
  Response: QueryBeforeSendHookAddressResponse,
} as const;

/**
 * AllBeforeSendHooksAddresses defines a gRPC query method for
 * getting all addresses with before send hook registered.
 * The response returns two arrays, an array with a list of denom and an array
 * of before send hook addresses. The idx of denom corresponds to before send
 * hook addresse's idx.
 *
 * @generated from rpc osmosis.tokenfactory.v1beta1.Query.AllBeforeSendHooksAddresses
 */
export const QueryAllBeforeSendHooksAddressesService = {
  typeName: TYPE_NAME,
  method: "AllBeforeSendHooksAddresses",
  Request: QueryAllBeforeSendHooksAddressesRequest,
  Response: QueryAllBeforeSendHooksAddressesResponse,
} as const;

