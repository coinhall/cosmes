// @generated by protoc-gen-cosmes v0.0.1 with parameter "target=ts"
// @generated from file osmosis/smartaccount/v1beta1/tx.proto (package osmosis.smartaccount.v1beta1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { MsgAddAuthenticator, MsgAddAuthenticatorResponse, MsgRemoveAuthenticator, MsgRemoveAuthenticatorResponse, MsgSetActiveState, MsgSetActiveStateResponse } from "./tx_pb.js";

const TYPE_NAME = "osmosis.smartaccount.v1beta1.Msg";

/**
 * @generated from rpc osmosis.smartaccount.v1beta1.Msg.AddAuthenticator
 */
export const MsgAddAuthenticatorService = {
  typeName: TYPE_NAME,
  method: "AddAuthenticator",
  Request: MsgAddAuthenticator,
  Response: MsgAddAuthenticatorResponse,
} as const;

/**
 * @generated from rpc osmosis.smartaccount.v1beta1.Msg.RemoveAuthenticator
 */
export const MsgRemoveAuthenticatorService = {
  typeName: TYPE_NAME,
  method: "RemoveAuthenticator",
  Request: MsgRemoveAuthenticator,
  Response: MsgRemoveAuthenticatorResponse,
} as const;

/**
 * SetActiveState sets the active state of the authenticator.
 * Primarily used for circuit breaking.
 *
 * @generated from rpc osmosis.smartaccount.v1beta1.Msg.SetActiveState
 */
export const MsgSetActiveStateService = {
  typeName: TYPE_NAME,
  method: "SetActiveState",
  Request: MsgSetActiveState,
  Response: MsgSetActiveStateResponse,
} as const;

