// @generated by protoc-gen-cosmes v0.0.1 with parameter "target=ts"
// @generated from file cosmos/circuit/v1/tx.proto (package cosmos.circuit.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { MsgAuthorizeCircuitBreaker, MsgAuthorizeCircuitBreakerResponse, MsgResetCircuitBreaker, MsgResetCircuitBreakerResponse, MsgTripCircuitBreaker, MsgTripCircuitBreakerResponse } from "./tx_pb.js";

const TYPE_NAME = "cosmos.circuit.v1.Msg";

/**
 * AuthorizeCircuitBreaker allows a super-admin to grant (or revoke) another
 * account's circuit breaker permissions.
 *
 * @generated from rpc cosmos.circuit.v1.Msg.AuthorizeCircuitBreaker
 */
export const MsgAuthorizeCircuitBreakerService = {
  typeName: TYPE_NAME,
  method: "AuthorizeCircuitBreaker",
  Request: MsgAuthorizeCircuitBreaker,
  Response: MsgAuthorizeCircuitBreakerResponse,
} as const;

/**
 * TripCircuitBreaker pauses processing of Msg's in the state machine.
 *
 * @generated from rpc cosmos.circuit.v1.Msg.TripCircuitBreaker
 */
export const MsgTripCircuitBreakerService = {
  typeName: TYPE_NAME,
  method: "TripCircuitBreaker",
  Request: MsgTripCircuitBreaker,
  Response: MsgTripCircuitBreakerResponse,
} as const;

/**
 * ResetCircuitBreaker resumes processing of Msg's in the state machine that
 * have been been paused using TripCircuitBreaker.
 *
 * @generated from rpc cosmos.circuit.v1.Msg.ResetCircuitBreaker
 */
export const MsgResetCircuitBreakerService = {
  typeName: TYPE_NAME,
  method: "ResetCircuitBreaker",
  Request: MsgResetCircuitBreaker,
  Response: MsgResetCircuitBreakerResponse,
} as const;

