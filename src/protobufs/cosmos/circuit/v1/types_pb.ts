// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file cosmos/circuit/v1/types.proto (package cosmos.circuit.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * Permissions are the permissions that an account has to trip
 * or reset the circuit breaker.
 *
 * @generated from message cosmos.circuit.v1.Permissions
 */
export class Permissions extends Message<Permissions> {
  /**
   * level is the level of permissions granted to this account.
   *
   * @generated from field: cosmos.circuit.v1.Permissions.Level level = 1;
   */
  level = Permissions_Level.NONE_UNSPECIFIED;

  /**
   * limit_type_urls is used with LEVEL_SOME_MSGS to limit the lists of Msg type
   * URLs that the account can trip. It is an error to use limit_type_urls with
   * a level other than LEVEL_SOME_MSGS.
   *
   * @generated from field: repeated string limit_type_urls = 2;
   */
  limitTypeUrls: string[] = [];

  constructor(data?: PartialMessage<Permissions>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cosmos.circuit.v1.Permissions";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "level", kind: "enum", T: proto3.getEnumType(Permissions_Level) },
    { no: 2, name: "limit_type_urls", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Permissions {
    return new Permissions().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Permissions {
    return new Permissions().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Permissions {
    return new Permissions().fromJsonString(jsonString, options);
  }

  static equals(a: Permissions | PlainMessage<Permissions> | undefined, b: Permissions | PlainMessage<Permissions> | undefined): boolean {
    return proto3.util.equals(Permissions, a, b);
  }
}

/**
 * Level is the permission level.
 *
 * @generated from enum cosmos.circuit.v1.Permissions.Level
 */
export enum Permissions_Level {
  /**
   * LEVEL_NONE_UNSPECIFIED indicates that the account will have no circuit
   * breaker permissions.
   *
   * @generated from enum value: LEVEL_NONE_UNSPECIFIED = 0;
   */
  NONE_UNSPECIFIED = 0,

  /**
   * LEVEL_SOME_MSGS indicates that the account will have permission to
   * trip or reset the circuit breaker for some Msg type URLs. If this level
   * is chosen, a non-empty list of Msg type URLs must be provided in
   * limit_type_urls.
   *
   * @generated from enum value: LEVEL_SOME_MSGS = 1;
   */
  SOME_MSGS = 1,

  /**
   * LEVEL_ALL_MSGS indicates that the account can trip or reset the circuit
   * breaker for Msg's of all type URLs.
   *
   * @generated from enum value: LEVEL_ALL_MSGS = 2;
   */
  ALL_MSGS = 2,

  /**
   * LEVEL_SUPER_ADMIN indicates that the account can take all circuit breaker
   * actions and can grant permissions to other accounts.
   *
   * @generated from enum value: LEVEL_SUPER_ADMIN = 3;
   */
  SUPER_ADMIN = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(Permissions_Level)
proto3.util.setEnumType(Permissions_Level, "cosmos.circuit.v1.Permissions.Level", [
  { no: 0, name: "LEVEL_NONE_UNSPECIFIED" },
  { no: 1, name: "LEVEL_SOME_MSGS" },
  { no: 2, name: "LEVEL_ALL_MSGS" },
  { no: 3, name: "LEVEL_SUPER_ADMIN" },
]);

/**
 * GenesisAccountPermissions is the account permissions for the circuit breaker in genesis
 *
 * @generated from message cosmos.circuit.v1.GenesisAccountPermissions
 */
export class GenesisAccountPermissions extends Message<GenesisAccountPermissions> {
  /**
   * @generated from field: string address = 1;
   */
  address = "";

  /**
   * @generated from field: cosmos.circuit.v1.Permissions permissions = 2;
   */
  permissions?: Permissions;

  constructor(data?: PartialMessage<GenesisAccountPermissions>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cosmos.circuit.v1.GenesisAccountPermissions";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "permissions", kind: "message", T: Permissions },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenesisAccountPermissions {
    return new GenesisAccountPermissions().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenesisAccountPermissions {
    return new GenesisAccountPermissions().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenesisAccountPermissions {
    return new GenesisAccountPermissions().fromJsonString(jsonString, options);
  }

  static equals(a: GenesisAccountPermissions | PlainMessage<GenesisAccountPermissions> | undefined, b: GenesisAccountPermissions | PlainMessage<GenesisAccountPermissions> | undefined): boolean {
    return proto3.util.equals(GenesisAccountPermissions, a, b);
  }
}

/**
 * GenesisState is the state that must be provided at genesis.
 *
 * @generated from message cosmos.circuit.v1.GenesisState
 */
export class GenesisState extends Message<GenesisState> {
  /**
   * @generated from field: repeated cosmos.circuit.v1.GenesisAccountPermissions account_permissions = 1;
   */
  accountPermissions: GenesisAccountPermissions[] = [];

  /**
   * @generated from field: repeated string disabled_type_urls = 2;
   */
  disabledTypeUrls: string[] = [];

  constructor(data?: PartialMessage<GenesisState>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cosmos.circuit.v1.GenesisState";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "account_permissions", kind: "message", T: GenesisAccountPermissions, repeated: true },
    { no: 2, name: "disabled_type_urls", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenesisState {
    return new GenesisState().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenesisState {
    return new GenesisState().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenesisState {
    return new GenesisState().fromJsonString(jsonString, options);
  }

  static equals(a: GenesisState | PlainMessage<GenesisState> | undefined, b: GenesisState | PlainMessage<GenesisState> | undefined): boolean {
    return proto3.util.equals(GenesisState, a, b);
  }
}

