// @generated by protoc-gen-cosmes v0.0.1 with parameter "target=ts"
// @generated from file cosmos/distribution/v1beta1/query.proto (package cosmos.distribution.v1beta1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { QueryCommunityPoolRequest, QueryCommunityPoolResponse, QueryDelegationRewardsRequest, QueryDelegationRewardsResponse, QueryDelegationTotalRewardsRequest, QueryDelegationTotalRewardsResponse, QueryDelegatorValidatorsRequest, QueryDelegatorValidatorsResponse, QueryDelegatorWithdrawAddressRequest, QueryDelegatorWithdrawAddressResponse, QueryParamsRequest, QueryParamsResponse, QueryValidatorCommissionRequest, QueryValidatorCommissionResponse, QueryValidatorDistributionInfoRequest, QueryValidatorDistributionInfoResponse, QueryValidatorOutstandingRewardsRequest, QueryValidatorOutstandingRewardsResponse, QueryValidatorSlashesRequest, QueryValidatorSlashesResponse } from "./query_pb.js";

const TYPE_NAME = "cosmos.distribution.v1beta1.Query";

/**
 * Params queries params of the distribution module.
 *
 * @generated from rpc cosmos.distribution.v1beta1.Query.Params
 */
export const QueryParamsService = {
  typeName: TYPE_NAME,
  method: "Params",
  Request: QueryParamsRequest,
  Response: QueryParamsResponse,
} as const;

/**
 * ValidatorDistributionInfo queries validator commission and self-delegation rewards for validator
 *
 * @generated from rpc cosmos.distribution.v1beta1.Query.ValidatorDistributionInfo
 */
export const QueryValidatorDistributionInfoService = {
  typeName: TYPE_NAME,
  method: "ValidatorDistributionInfo",
  Request: QueryValidatorDistributionInfoRequest,
  Response: QueryValidatorDistributionInfoResponse,
} as const;

/**
 * ValidatorOutstandingRewards queries rewards of a validator address.
 *
 * @generated from rpc cosmos.distribution.v1beta1.Query.ValidatorOutstandingRewards
 */
export const QueryValidatorOutstandingRewardsService = {
  typeName: TYPE_NAME,
  method: "ValidatorOutstandingRewards",
  Request: QueryValidatorOutstandingRewardsRequest,
  Response: QueryValidatorOutstandingRewardsResponse,
} as const;

/**
 * ValidatorCommission queries accumulated commission for a validator.
 *
 * @generated from rpc cosmos.distribution.v1beta1.Query.ValidatorCommission
 */
export const QueryValidatorCommissionService = {
  typeName: TYPE_NAME,
  method: "ValidatorCommission",
  Request: QueryValidatorCommissionRequest,
  Response: QueryValidatorCommissionResponse,
} as const;

/**
 * ValidatorSlashes queries slash events of a validator.
 *
 * @generated from rpc cosmos.distribution.v1beta1.Query.ValidatorSlashes
 */
export const QueryValidatorSlashesService = {
  typeName: TYPE_NAME,
  method: "ValidatorSlashes",
  Request: QueryValidatorSlashesRequest,
  Response: QueryValidatorSlashesResponse,
} as const;

/**
 * DelegationRewards queries the total rewards accrued by a delegation.
 *
 * @generated from rpc cosmos.distribution.v1beta1.Query.DelegationRewards
 */
export const QueryDelegationRewardsService = {
  typeName: TYPE_NAME,
  method: "DelegationRewards",
  Request: QueryDelegationRewardsRequest,
  Response: QueryDelegationRewardsResponse,
} as const;

/**
 * DelegationTotalRewards queries the total rewards accrued by each
 * validator.
 *
 * @generated from rpc cosmos.distribution.v1beta1.Query.DelegationTotalRewards
 */
export const QueryDelegationTotalRewardsService = {
  typeName: TYPE_NAME,
  method: "DelegationTotalRewards",
  Request: QueryDelegationTotalRewardsRequest,
  Response: QueryDelegationTotalRewardsResponse,
} as const;

/**
 * DelegatorValidators queries the validators of a delegator.
 *
 * @generated from rpc cosmos.distribution.v1beta1.Query.DelegatorValidators
 */
export const QueryDelegatorValidatorsService = {
  typeName: TYPE_NAME,
  method: "DelegatorValidators",
  Request: QueryDelegatorValidatorsRequest,
  Response: QueryDelegatorValidatorsResponse,
} as const;

/**
 * DelegatorWithdrawAddress queries withdraw address of a delegator.
 *
 * @generated from rpc cosmos.distribution.v1beta1.Query.DelegatorWithdrawAddress
 */
export const QueryDelegatorWithdrawAddressService = {
  typeName: TYPE_NAME,
  method: "DelegatorWithdrawAddress",
  Request: QueryDelegatorWithdrawAddressRequest,
  Response: QueryDelegatorWithdrawAddressResponse,
} as const;

/**
 * CommunityPool queries the community pool coins.
 *
 * @generated from rpc cosmos.distribution.v1beta1.Query.CommunityPool
 */
export const QueryCommunityPoolService = {
  typeName: TYPE_NAME,
  method: "CommunityPool",
  Request: QueryCommunityPoolRequest,
  Response: QueryCommunityPoolResponse,
} as const;

