// @generated by protoc-gen-cosmes v0.0.1 with parameter "target=ts"
// @generated from file market/query.proto (package pendulumlabs.market.market, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { QueryAllBurningsRequest, QueryAllBurningsResponse, QueryAllDropRequest, QueryAllMemberRequest, QueryAllMemberResponse, QueryAllOrderRequest, QueryAllPoolRequest, QueryAllPoolResponse, QueryAllVolumeRequest, QueryAllVolumeResponse, QueryBookendsRequest, QueryBookendsResponse, QueryBookRequest, QueryBookResponse, QueryBurnedRequest, QueryBurnedResponse, QueryDropAmountsRequest, QueryDropAmountsResponse, QueryDropCoinRequest, QueryDropCoinResponse, QueryDropOwnerPairRequest, QueryDropPairsRequest, QueryDropPairsResponse, QueryDropRequest, QueryDropResponse, QueryDropsResponse, QueryDropsToCoinsRequest, QueryDropsToCoinsResponse, QueryGetBurningsRequest, QueryGetBurningsResponse, QueryGetMemberRequest, QueryGetMemberResponse, QueryGetPoolRequest, QueryGetPoolResponse, QueryHistoryRequest, QueryHistoryResponse, QueryOrderOwnerRequest, QueryOrderOwnerUidsResponse, QueryOrderRequest, QueryOrderResponse, QueryOrdersResponse, QueryParamsRequest, QueryParamsResponse, QueryQuoteRequest, QueryQuoteResponse, QueryVolumeRequest, QueryVolumeResponse } from "./query_pb.js";

const TYPE_NAME = "pendulumlabs.market.market.Query";

/**
 * Parameters queries the parameters of the module.
 *
 * @generated from rpc pendulumlabs.market.market.Query.Params
 */
export const QueryParamsService = {
  typeName: TYPE_NAME,
  method: "Params",
  Request: QueryParamsRequest,
  Response: QueryParamsResponse,
} as const;

/**
 * Queries total burned.
 *
 * @generated from rpc pendulumlabs.market.market.Query.Burned
 */
export const QueryBurnedService = {
  typeName: TYPE_NAME,
  method: "Burned",
  Request: QueryBurnedRequest,
  Response: QueryBurnedResponse,
} as const;

/**
 * Queries a Pool by index.
 *
 * @generated from rpc pendulumlabs.market.market.Query.Pool
 */
export const QueryPoolService = {
  typeName: TYPE_NAME,
  method: "Pool",
  Request: QueryGetPoolRequest,
  Response: QueryGetPoolResponse,
} as const;

/**
 * Queries a list of Pool items.
 *
 * @generated from rpc pendulumlabs.market.market.Query.PoolAll
 */
export const QueryPoolAllService = {
  typeName: TYPE_NAME,
  method: "PoolAll",
  Request: QueryAllPoolRequest,
  Response: QueryAllPoolResponse,
} as const;

/**
 * Queries a Volume by index.
 *
 * @generated from rpc pendulumlabs.market.market.Query.Volume
 */
export const QueryVolumeService = {
  typeName: TYPE_NAME,
  method: "Volume",
  Request: QueryVolumeRequest,
  Response: QueryVolumeResponse,
} as const;

/**
 * Queries all Volumes.
 *
 * @generated from rpc pendulumlabs.market.market.Query.VolumeAll
 */
export const QueryVolumeAllService = {
  typeName: TYPE_NAME,
  method: "VolumeAll",
  Request: QueryAllVolumeRequest,
  Response: QueryAllVolumeResponse,
} as const;

/**
 * Queries a Drop by index.
 *
 * @generated from rpc pendulumlabs.market.market.Query.Drop
 */
export const QueryDropService = {
  typeName: TYPE_NAME,
  method: "Drop",
  Request: QueryDropRequest,
  Response: QueryDropResponse,
} as const;

/**
 * Queries a Drop by index.
 *
 * @generated from rpc pendulumlabs.market.market.Query.DropAmounts
 */
export const QueryDropAmountsService = {
  typeName: TYPE_NAME,
  method: "DropAmounts",
  Request: QueryDropAmountsRequest,
  Response: QueryDropAmountsResponse,
} as const;

/**
 * Queries a Drop by index.
 *
 * @generated from rpc pendulumlabs.market.market.Query.DropCoin
 */
export const QueryDropCoinService = {
  typeName: TYPE_NAME,
  method: "DropCoin",
  Request: QueryDropCoinRequest,
  Response: QueryDropCoinResponse,
} as const;

/**
 * Converts drops to coin amounts
 *
 * @generated from rpc pendulumlabs.market.market.Query.DropsToCoins
 */
export const QueryDropsToCoinsService = {
  typeName: TYPE_NAME,
  method: "DropsToCoins",
  Request: QueryDropsToCoinsRequest,
  Response: QueryDropsToCoinsResponse,
} as const;

/**
 * Queries a Drop by index.
 *
 * @generated from rpc pendulumlabs.market.market.Query.DropPairs
 */
export const QueryDropPairsService = {
  typeName: TYPE_NAME,
  method: "DropPairs",
  Request: QueryDropPairsRequest,
  Response: QueryDropPairsResponse,
} as const;

/**
 * Queries a Drop by index.
 *
 * @generated from rpc pendulumlabs.market.market.Query.DropOwnerPair
 */
export const QueryDropOwnerPairService = {
  typeName: TYPE_NAME,
  method: "DropOwnerPair",
  Request: QueryDropOwnerPairRequest,
  Response: QueryDropsResponse,
} as const;

/**
 * Queries a list of Drop items.
 *
 * @generated from rpc pendulumlabs.market.market.Query.DropAll
 */
export const QueryDropAllService = {
  typeName: TYPE_NAME,
  method: "DropAll",
  Request: QueryAllDropRequest,
  Response: QueryDropsResponse,
} as const;

/**
 * Queries a Member by index.
 *
 * @generated from rpc pendulumlabs.market.market.Query.Member
 */
export const QueryMemberService = {
  typeName: TYPE_NAME,
  method: "Member",
  Request: QueryGetMemberRequest,
  Response: QueryGetMemberResponse,
} as const;

/**
 * Queries a list of Member items.
 *
 * @generated from rpc pendulumlabs.market.market.Query.MemberAll
 */
export const QueryMemberAllService = {
  typeName: TYPE_NAME,
  method: "MemberAll",
  Request: QueryAllMemberRequest,
  Response: QueryAllMemberResponse,
} as const;

/**
 * Queries a Burnings by index.
 *
 * @generated from rpc pendulumlabs.market.market.Query.Burnings
 */
export const QueryBurningsService = {
  typeName: TYPE_NAME,
  method: "Burnings",
  Request: QueryGetBurningsRequest,
  Response: QueryGetBurningsResponse,
} as const;

/**
 * Queries a list of Burnings items.
 *
 * @generated from rpc pendulumlabs.market.market.Query.BurningsAll
 */
export const QueryBurningsAllService = {
  typeName: TYPE_NAME,
  method: "BurningsAll",
  Request: QueryAllBurningsRequest,
  Response: QueryAllBurningsResponse,
} as const;

/**
 * Queries a Order by index.
 *
 * @generated from rpc pendulumlabs.market.market.Query.Order
 */
export const QueryOrderService = {
  typeName: TYPE_NAME,
  method: "Order",
  Request: QueryOrderRequest,
  Response: QueryOrderResponse,
} as const;

/**
 * Queries a list of Order items.
 *
 * @generated from rpc pendulumlabs.market.market.Query.OrderAll
 */
export const QueryOrderAllService = {
  typeName: TYPE_NAME,
  method: "OrderAll",
  Request: QueryAllOrderRequest,
  Response: QueryOrdersResponse,
} as const;

/**
 * Queries a list of Order items.
 *
 * @generated from rpc pendulumlabs.market.market.Query.OrderOwner
 */
export const QueryOrderOwnerService = {
  typeName: TYPE_NAME,
  method: "OrderOwner",
  Request: QueryOrderOwnerRequest,
  Response: QueryOrdersResponse,
} as const;

/**
 * Queries a list of Order items.
 *
 * @generated from rpc pendulumlabs.market.market.Query.OrderOwnerUids
 */
export const QueryOrderOwnerUidsService = {
  typeName: TYPE_NAME,
  method: "OrderOwnerUids",
  Request: QueryOrderOwnerRequest,
  Response: QueryOrderOwnerUidsResponse,
} as const;

/**
 * Queries a list of Book items.
 *
 * @generated from rpc pendulumlabs.market.market.Query.Book
 */
export const QueryBookService = {
  typeName: TYPE_NAME,
  method: "Book",
  Request: QueryBookRequest,
  Response: QueryBookResponse,
} as const;

/**
 * Queries a list of Bookends items.
 *
 * @generated from rpc pendulumlabs.market.market.Query.Bookends
 */
export const QueryBookendsService = {
  typeName: TYPE_NAME,
  method: "Bookends",
  Request: QueryBookendsRequest,
  Response: QueryBookendsResponse,
} as const;

/**
 * Queries pool trade history.
 *
 * @generated from rpc pendulumlabs.market.market.Query.History
 */
export const QueryHistoryService = {
  typeName: TYPE_NAME,
  method: "History",
  Request: QueryHistoryRequest,
  Response: QueryHistoryResponse,
} as const;

/**
 * Queries pool trade history.
 *
 * @generated from rpc pendulumlabs.market.market.Query.Quote
 */
export const QueryQuoteService = {
  typeName: TYPE_NAME,
  method: "Quote",
  Request: QueryQuoteRequest,
  Response: QueryQuoteResponse,
} as const;

