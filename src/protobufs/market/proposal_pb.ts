// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file market/proposal.proto (package pendulumlabs.market.market, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { Metadata } from "../cosmos/bank/v1beta1/bank_pb.js";

/**
 * DenomMetadataProposal details adding denom metadata
 *
 * @generated from message pendulumlabs.market.market.DenomMetadataProposal
 */
export class DenomMetadataProposal extends Message<DenomMetadataProposal> {
  /**
   * @generated from field: string sender = 1;
   */
  sender = "";

  /**
   * @generated from field: string title = 2;
   */
  title = "";

  /**
   * @generated from field: string description = 3;
   */
  description = "";

  /**
   * @generated from field: cosmos.bank.v1beta1.Metadata metadata = 4;
   */
  metadata?: Metadata;

  constructor(data?: PartialMessage<DenomMetadataProposal>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "pendulumlabs.market.market.DenomMetadataProposal";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "sender", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "metadata", kind: "message", T: Metadata },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DenomMetadataProposal {
    return new DenomMetadataProposal().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DenomMetadataProposal {
    return new DenomMetadataProposal().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DenomMetadataProposal {
    return new DenomMetadataProposal().fromJsonString(jsonString, options);
  }

  static equals(a: DenomMetadataProposal | PlainMessage<DenomMetadataProposal> | undefined, b: DenomMetadataProposal | PlainMessage<DenomMetadataProposal> | undefined): boolean {
    return proto3.util.equals(DenomMetadataProposal, a, b);
  }
}

